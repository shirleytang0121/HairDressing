/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@jaames/iro/dist/iro.es.js":
/*!*************************************************!*\
  !*** ./node_modules/@jaames/iro/dist/iro.es.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/*!\n * iro.js v5.5.2\n * 2016-2021 James Daniel\n * Licensed under MPL 2.0\n * github.com/jaames/iro.js\n */\n\nvar n,u,t,i,r,o,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;function s(n,l){for(var u in l){ n[u]=l[u]; }return n}function a(n){var l=n.parentNode;l&&l.removeChild(n);}function h(n,l,u){var t,i,r,o,f=arguments;if(l=s({},l),arguments.length>3){ for(u=[u],t=3;t<arguments.length;t++){ u.push(f[t]); } }if(null!=u&&(l.children=u),null!=n&&null!=n.defaultProps){ for(i in n.defaultProps){ void 0===l[i]&&(l[i]=n.defaultProps[i]); } }return o=l.key,null!=(r=l.ref)&&delete l.ref,null!=o&&delete l.key,v(n,l,o,r)}function v(l,u,t,i){var r={type:l,props:u,key:t,ref:i,__k:null,__p:null,__b:0,__e:null,l:null,__c:null,constructor:void 0};return n.vnode&&n.vnode(r),r}function d(n){return n.children}function y(n){if(null==n||\"boolean\"==typeof n){ return null; }if(\"string\"==typeof n||\"number\"==typeof n){ return v(null,n,null,null); }if(null!=n.__e||null!=n.__c){var l=v(n.type,n.props,n.key,null);return l.__e=n.__e,l}return n}function m(n,l){this.props=n,this.context=l;}function w(n,l){if(null==l){ return n.__p?w(n.__p,n.__p.__k.indexOf(n)+1):null; }for(var u;l<n.__k.length;l++){ if(null!=(u=n.__k[l])&&null!=u.__e){ return u.__e; } }return \"function\"==typeof n.type?w(n):null}function g(n){var l,u;if(null!=(n=n.__p)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++){ if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break} }return g(n)}}function k(l){(!l.__d&&(l.__d=!0)&&1===u.push(l)||i!==n.debounceRendering)&&(i=n.debounceRendering,(n.debounceRendering||t)(_));}function _(){var n,l,t,i,r,o,f,e;for(u.sort(function(n,l){return l.__v.__b-n.__v.__b});n=u.pop();){ n.__d&&(t=void 0,i=void 0,o=(r=(l=n).__v).__e,f=l.__P,e=l.u,l.u=!1,f&&(t=[],i=$(f,r,s({},r),l.__n,void 0!==f.ownerSVGElement,null,t,e,null==o?w(r):o),j(t,r),i!=o&&g(r))); }}function b(n,l,u,t,i,r,o,c,s){var h,v,p,d,y,m,g,k=u&&u.__k||e,_=k.length;if(c==f&&(c=null!=r?r[0]:_?w(u,0):null),h=0,l.__k=x(l.__k,function(u){if(null!=u){if(u.__p=l,u.__b=l.__b+1,null===(p=k[h])||p&&u.key==p.key&&u.type===p.type){ k[h]=void 0; }else { for(v=0;v<_;v++){if((p=k[v])&&u.key==p.key&&u.type===p.type){k[v]=void 0;break}p=null;} }if(d=$(n,u,p=p||f,t,i,r,o,null,c,s),(v=u.ref)&&p.ref!=v&&(g||(g=[])).push(v,u.__c||d,u),null!=d){if(null==m&&(m=d),null!=u.l){ d=u.l,u.l=null; }else if(r==p||d!=c||null==d.parentNode){n:if(null==c||c.parentNode!==n){ n.appendChild(d); }else{for(y=c,v=0;(y=y.nextSibling)&&v<_;v+=2){ if(y==d){ break n; } }n.insertBefore(d,c);}\"option\"==l.type&&(n.value=\"\");}c=d.nextSibling,\"function\"==typeof l.type&&(l.l=d);}}return h++,u}),l.__e=m,null!=r&&\"function\"!=typeof l.type){ for(h=r.length;h--;){ null!=r[h]&&a(r[h]); } }for(h=_;h--;){ null!=k[h]&&D(k[h],k[h]); }if(g){ for(h=0;h<g.length;h++){ A(g[h],g[++h],g[++h]); } }}function x(n,l,u){if(null==u&&(u=[]),null==n||\"boolean\"==typeof n){ l&&u.push(l(null)); }else if(Array.isArray(n)){ for(var t=0;t<n.length;t++){ x(n[t],l,u); } }else { u.push(l?l(y(n)):n); }return u}function C(n,l,u,t,i){var r;for(r in u){ r in l||N(n,r,null,u[r],t); }for(r in l){ i&&\"function\"!=typeof l[r]||\"value\"===r||\"checked\"===r||u[r]===l[r]||N(n,r,l[r],u[r],t); }}function P(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=\"number\"==typeof u&&!1===c.test(l)?u+\"px\":null==u?\"\":u;}function N(n,l,u,t,i){var r,o,f,e,c;if(\"key\"===(l=i?\"className\"===l?\"class\":l:\"class\"===l?\"className\":l)||\"children\"===l);else if(\"style\"===l){ if(r=n.style,\"string\"==typeof u){ r.cssText=u; }else{if(\"string\"==typeof t&&(r.cssText=\"\",t=null),t){ for(o in t){ u&&o in u||P(r,o,\"\"); } }if(u){ for(f in u){ t&&u[f]===t[f]||P(r,f,u[f]); } }} }else{ \"o\"===l[0]&&\"n\"===l[1]?(e=l!==(l=l.replace(/Capture$/,\"\")),c=l.toLowerCase(),l=(c in n?c:l).slice(2),u?(t||n.addEventListener(l,T,e),(n.t||(n.t={}))[l]=u):n.removeEventListener(l,T,e)):\"list\"!==l&&\"tagName\"!==l&&\"form\"!==l&&!i&&l in n?n[l]=null==u?\"\":u:\"function\"!=typeof u&&\"dangerouslySetInnerHTML\"!==l&&(l!==(l=l.replace(/^xlink:?/,\"\"))?null==u||!1===u?n.removeAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase()):n.setAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase(),u):null==u||!1===u?n.removeAttribute(l):n.setAttribute(l,u)); }}function T(l){return this.t[l.type](n.event?n.event(l):l)}function $(l,u,t,i,r,o,f,e,c,a){var h,v,p,y,w,g,k,_,C,P,N=u.type;if(void 0!==u.constructor){ return null; }(h=n.__b)&&h(u);try{n:if(\"function\"==typeof N){if(_=u.props,C=(h=N.contextType)&&i[h.__c],P=h?C?C.props.value:h.__p:i,t.__c?k=(v=u.__c=t.__c).__p=v.__E:(\"prototype\"in N&&N.prototype.render?u.__c=v=new N(_,P):(u.__c=v=new m(_,P),v.constructor=N,v.render=H),C&&C.sub(v),v.props=_,v.state||(v.state={}),v.context=P,v.__n=i,p=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=N.getDerivedStateFromProps&&s(v.__s==v.state?v.__s=s({},v.__s):v.__s,N.getDerivedStateFromProps(_,v.__s)),p){ null==N.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&f.push(v); }else{if(null==N.getDerivedStateFromProps&&null==e&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(_,P),!e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(_,v.__s,P)){for(v.props=_,v.state=v.__s,v.__d=!1,v.__v=u,u.__e=null!=c?c!==t.__e?c:t.__e:null,u.__k=t.__k,h=0;h<u.__k.length;h++){ u.__k[h]&&(u.__k[h].__p=u); }break n}null!=v.componentWillUpdate&&v.componentWillUpdate(_,v.__s,P);}for(y=v.props,w=v.state,v.context=P,v.props=_,v.state=v.__s,(h=n.__r)&&h(u),v.__d=!1,v.__v=u,v.__P=l,h=v.render(v.props,v.state,v.context),u.__k=x(null!=h&&h.type==d&&null==h.key?h.props.children:h),null!=v.getChildContext&&(i=s(s({},i),v.getChildContext())),p||null==v.getSnapshotBeforeUpdate||(g=v.getSnapshotBeforeUpdate(y,w)),b(l,u,t,i,r,o,f,c,a),v.base=u.__e;h=v.__h.pop();){ v.__s&&(v.state=v.__s),h.call(v); }p||null==y||null==v.componentDidUpdate||v.componentDidUpdate(y,w,g),k&&(v.__E=v.__p=null);}else { u.__e=z(t.__e,u,t,i,r,o,f,a); }(h=n.diffed)&&h(u);}catch(l){n.__e(l,u,t);}return u.__e}function j(l,u){for(var t;t=l.pop();){ try{t.componentDidMount();}catch(l){n.__e(l,t.__v);} }n.__c&&n.__c(u);}function z(n,l,u,t,i,r,o,c){var s,a,h,v,p=u.props,d=l.props;if(i=\"svg\"===l.type||i,null==n&&null!=r){ for(s=0;s<r.length;s++){ if(null!=(a=r[s])&&(null===l.type?3===a.nodeType:a.localName===l.type)){n=a,r[s]=null;break} } }if(null==n){if(null===l.type){ return document.createTextNode(d); }n=i?document.createElementNS(\"http://www.w3.org/2000/svg\",l.type):document.createElement(l.type),r=null;}return null===l.type?p!==d&&(null!=r&&(r[r.indexOf(n)]=null),n.data=d):l!==u&&(null!=r&&(r=e.slice.call(n.childNodes)),h=(p=u.props||f).dangerouslySetInnerHTML,v=d.dangerouslySetInnerHTML,c||(v||h)&&(v&&h&&v.__html==h.__html||(n.innerHTML=v&&v.__html||\"\")),C(n,d,p,i,c),l.__k=l.props.children,v||b(n,l,u,t,\"foreignObject\"!==l.type&&i,r,o,f,c),c||(\"value\"in d&&void 0!==d.value&&d.value!==n.value&&(n.value=null==d.value?\"\":d.value),\"checked\"in d&&void 0!==d.checked&&d.checked!==n.checked&&(n.checked=d.checked))),n}function A(l,u,t){try{\"function\"==typeof l?l(u):l.current=u;}catch(l){n.__e(l,t);}}function D(l,u,t){var i,r,o;if(n.unmount&&n.unmount(l),(i=l.ref)&&A(i,null,u),t||\"function\"==typeof l.type||(t=null!=(r=l.__e)),l.__e=l.l=null,null!=(i=l.__c)){if(i.componentWillUnmount){ try{i.componentWillUnmount();}catch(l){n.__e(l,u);} }i.base=i.__P=null;}if(i=l.__k){ for(o=0;o<i.length;o++){ i[o]&&D(i[o],u,t); } }null!=r&&a(r);}function H(n,l,u){return this.constructor(n,u)}function I(l,u,t){var i,o,c;n.__p&&n.__p(l,u),o=(i=t===r)?null:t&&t.__k||u.__k,l=h(d,null,[l]),c=[],$(u,i?u.__k=l:(t||u).__k=l,o||f,f,void 0!==u.ownerSVGElement,t&&!i?[t]:o?null:e.slice.call(u.childNodes),c,!1,t||f,i),j(c,l);}n={},m.prototype.setState=function(n,l){var u=this.__s!==this.state&&this.__s||(this.__s=s({},this.state));(\"function\"!=typeof n||(n=n(u,this.props)))&&s(u,n),null!=n&&this.__v&&(this.u=!1,l&&this.__h.push(l),k(this));},m.prototype.forceUpdate=function(n){this.__v&&(n&&this.__h.push(n),this.u=!0,k(this));},m.prototype.render=d,u=[],t=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,i=n.debounceRendering,n.__e=function(n,l,u){for(var t;l=l.__p;){ if((t=l.__c)&&!t.__p){ try{if(t.constructor&&null!=t.constructor.getDerivedStateFromError){ t.setState(t.constructor.getDerivedStateFromError(n)); }else{if(null==t.componentDidCatch){ continue; }t.componentDidCatch(n);}return k(t.__E=t)}catch(l){n=l;} } }throw n},r=f,o=0;\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) { descriptor.writable = true; }\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) { _defineProperties(Constructor.prototype, protoProps); }\n  if (staticProps) { _defineProperties(Constructor, staticProps); }\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    var arguments$1 = arguments;\n\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments$1[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n// Some regular expressions for rgb() and hsl() Colors are borrowed from tinyColor\n// https://github.com/bgrins/TinyColor\n// Kelvin temperature math borrowed from Neil Barlett's implementation\n// from https://github.com/neilbartlett/color-temperature\n// https://www.w3.org/TR/css3-values/#integers\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?'; // http://www.w3.org/TR/css3-values/#number-value\n\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?'; // Allow positive/negative integer/number. Don't capture the either/or, just the entire outcome\n\nvar CSS_UNIT = '(?:' + CSS_NUMBER + ')|(?:' + CSS_INTEGER + ')'; // Parse function params\n// Parens and commas are optional, and this also allows for whitespace between numbers\n\nvar PERMISSIVE_MATCH_3 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\nvar PERMISSIVE_MATCH_4 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?'; // Regex patterns for functional color strings\n\nvar REGEX_FUNCTIONAL_RGB = new RegExp('rgb' + PERMISSIVE_MATCH_3);\nvar REGEX_FUNCTIONAL_RGBA = new RegExp('rgba' + PERMISSIVE_MATCH_4);\nvar REGEX_FUNCTIONAL_HSL = new RegExp('hsl' + PERMISSIVE_MATCH_3);\nvar REGEX_FUNCTIONAL_HSLA = new RegExp('hsla' + PERMISSIVE_MATCH_4); // Color string parsing regex\n\nvar HEX_START = '^(?:#?|0x?)';\nvar HEX_INT_SINGLE = '([0-9a-fA-F]{1})';\nvar HEX_INT_DOUBLE = '([0-9a-fA-F]{2})';\nvar REGEX_HEX_3 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nvar REGEX_HEX_4 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nvar REGEX_HEX_6 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$');\nvar REGEX_HEX_8 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$'); // Kelvin temperature bounds\n\nvar KELVIN_MIN = 2000;\nvar KELVIN_MAX = 40000; // Math shorthands\n\nvar log = Math.log,\n    round = Math.round,\n    floor = Math.floor;\n/**\r\n * @desc Clamp a number between a min and max value\r\n * @param num - input value\r\n * @param min - min allowed value\r\n * @param max - max allowed value\r\n */\n\nfunction clamp(num, min, max) {\n  return Math.min(Math.max(num, min), max);\n}\n/**\r\n * @desc Parse a css unit string - either regular int or a percentage number\r\n * @param str - css unit string\r\n * @param max - max unit value, used for calculating percentages\r\n */\n\n\nfunction parseUnit(str, max) {\n  var isPercentage = str.indexOf('%') > -1;\n  var num = parseFloat(str);\n  return isPercentage ? max / 100 * num : num;\n}\n/**\r\n * @desc Parse hex str to an int\r\n * @param str - hex string to parse\r\n */\n\n\nfunction parseHexInt(str) {\n  return parseInt(str, 16);\n}\n/**\r\n * @desc Convert nunber into to 2-digit hex\r\n * @param int - number to convert\r\n */\n\n\nfunction intToHex(_int) {\n  return _int.toString(16).padStart(2, '0');\n}\n\nvar IroColor =\n/*#__PURE__*/\nfunction () {\n  /**\r\n    * @constructor Color object\r\n    * @param value - initial color value\r\n  */\n  function IroColor(value, onChange) {\n    // The default Color value\n    this.$ = {\n      h: 0,\n      s: 0,\n      v: 0,\n      a: 1\n    };\n    if (value) { this.set(value); } // The watch callback function for this Color will be stored here\n\n    this.onChange = onChange;\n    this.initialValue = _extends({}, this.$); // copy initial value\n  }\n  /**\r\n    * @desc Set the Color from any valid value\r\n    * @param value - new color value\r\n  */\n\n\n  var _proto = IroColor.prototype;\n\n  _proto.set = function set(value) {\n    if (typeof value === 'string') {\n      if (/^(?:#?|0x?)[0-9a-fA-F]{3,8}$/.test(value)) {\n        this.hexString = value;\n      } else if (/^rgba?/.test(value)) {\n        this.rgbString = value;\n      } else if (/^hsla?/.test(value)) {\n        this.hslString = value;\n      }\n    } else if (typeof value === 'object') {\n      if (value instanceof IroColor) {\n        this.hsva = value.hsva;\n      } else if ('r' in value && 'g' in value && 'b' in value) {\n        this.rgb = value;\n      } else if ('h' in value && 's' in value && 'v' in value) {\n        this.hsv = value;\n      } else if ('h' in value && 's' in value && 'l' in value) {\n        this.hsl = value;\n      } else if ('kelvin' in value) {\n        this.kelvin = value.kelvin;\n      }\n    } else {\n      throw new Error('Invalid color value');\n    }\n  }\n  /**\r\n    * @desc Shortcut to set a specific channel value\r\n    * @param format - hsv | hsl | rgb\r\n    * @param channel - individual channel to set, for example if model = hsl, chanel = h | s | l\r\n    * @param value - new value for the channel\r\n  */\n  ;\n\n  _proto.setChannel = function setChannel(format, channel, value) {\n    var _extends2;\n\n    this[format] = _extends({}, this[format], (_extends2 = {}, _extends2[channel] = value, _extends2));\n  }\n  /**\r\n   * @desc Reset color back to its initial value\r\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this.hsva = this.initialValue;\n  }\n  /**\r\n    * @desc make new Color instance with the same value as this one\r\n  */\n  ;\n\n  _proto.clone = function clone() {\n    return new IroColor(this);\n  }\n  /**\r\n   * @desc remove color onChange\r\n   */\n  ;\n\n  _proto.unbind = function unbind() {\n    this.onChange = undefined;\n  }\n  /**\r\n    * @desc Convert hsv object to rgb\r\n    * @param hsv - hsv color object\r\n  */\n  ;\n\n  IroColor.hsvToRgb = function hsvToRgb(hsv) {\n    var h = hsv.h / 60;\n    var s = hsv.s / 100;\n    var v = hsv.v / 100;\n    var i = floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return {\n      r: clamp(r * 255, 0, 255),\n      g: clamp(g * 255, 0, 255),\n      b: clamp(b * 255, 0, 255)\n    };\n  }\n  /**\r\n    * @desc Convert rgb object to hsv\r\n    * @param rgb - rgb object\r\n  */\n  ;\n\n  IroColor.rgbToHsv = function rgbToHsv(rgb) {\n    var r = rgb.r / 255;\n    var g = rgb.g / 255;\n    var b = rgb.b / 255;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var delta = max - min;\n    var hue = 0;\n    var value = max;\n    var saturation = max === 0 ? 0 : delta / max;\n\n    switch (max) {\n      case min:\n        hue = 0; // achromatic\n\n        break;\n\n      case r:\n        hue = (g - b) / delta + (g < b ? 6 : 0);\n        break;\n\n      case g:\n        hue = (b - r) / delta + 2;\n        break;\n\n      case b:\n        hue = (r - g) / delta + 4;\n        break;\n    }\n\n    return {\n      h: hue * 60 % 360,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp(value * 100, 0, 100)\n    };\n  }\n  /**\r\n    * @desc Convert hsv object to hsl\r\n    * @param hsv - hsv object\r\n  */\n  ;\n\n  IroColor.hsvToHsl = function hsvToHsl(hsv) {\n    var s = hsv.s / 100;\n    var v = hsv.v / 100;\n    var l = (2 - s) * v;\n    var divisor = l <= 1 ? l : 2 - l; // Avoid division by zero when lightness is close to zero\n\n    var saturation = divisor < 1e-9 ? 0 : s * v / divisor;\n    return {\n      h: hsv.h,\n      s: clamp(saturation * 100, 0, 100),\n      l: clamp(l * 50, 0, 100)\n    };\n  }\n  /**\r\n    * @desc Convert hsl object to hsv\r\n    * @param hsl - hsl object\r\n  */\n  ;\n\n  IroColor.hslToHsv = function hslToHsv(hsl) {\n    var l = hsl.l * 2;\n    var s = hsl.s * (l <= 100 ? l : 200 - l) / 100; // Avoid division by zero when l + s is near 0\n\n    var saturation = l + s < 1e-9 ? 0 : 2 * s / (l + s);\n    return {\n      h: hsl.h,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp((l + s) / 2, 0, 100)\n    };\n  }\n  /**\r\n    * @desc Convert a kelvin temperature to an approx, RGB value\r\n    * @param kelvin - kelvin temperature\r\n  */\n  ;\n\n  IroColor.kelvinToRgb = function kelvinToRgb(kelvin) {\n    var temp = kelvin / 100;\n    var r, g, b;\n\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n\n    return {\n      r: clamp(floor(r), 0, 255),\n      g: clamp(floor(g), 0, 255),\n      b: clamp(floor(b), 0, 255)\n    };\n  }\n  /**\r\n   * @desc Convert an RGB color to an approximate kelvin temperature\r\n   * @param kelvin - kelvin temperature\r\n  */\n  ;\n\n  IroColor.rgbToKelvin = function rgbToKelvin(rgb) {\n    var r = rgb.r,\n        b = rgb.b;\n    var eps = 0.4;\n    var minTemp = KELVIN_MIN;\n    var maxTemp = KELVIN_MAX;\n    var temp;\n\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n\n      var _rgb = IroColor.kelvinToRgb(temp);\n\n      if (_rgb.b / _rgb.r >= b / r) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n\n    return temp;\n  };\n\n  _createClass(IroColor, [{\n    key: \"hsv\",\n    get: function get() {\n      // value is cloned to allow changes to be made to the values before passing them back\n      var value = this.$;\n      return {\n        h: value.h,\n        s: value.s,\n        v: value.v\n      };\n    },\n    set: function set(newValue) {\n      var oldValue = this.$;\n      newValue = _extends({}, oldValue, newValue); // If this Color is being watched for changes we need to compare the new and old values to check the difference\n      // Otherwise we can just be lazy\n\n      if (this.onChange) {\n        // Compute changed values\n        var changes = {\n          h: false,\n          v: false,\n          s: false,\n          a: false\n        };\n\n        for (var key in oldValue) {\n          changes[key] = newValue[key] != oldValue[key];\n        }\n\n        this.$ = newValue; // If the value has changed, call hook callback\n\n        if (changes.h || changes.s || changes.v || changes.a) { this.onChange(this, changes); }\n      } else {\n        this.$ = newValue;\n      }\n    }\n  }, {\n    key: \"hsva\",\n    get: function get() {\n      return _extends({}, this.$);\n    },\n    set: function set(value) {\n      this.hsv = value;\n    }\n  }, {\n    key: \"hue\",\n    get: function get() {\n      return this.$.h;\n    },\n    set: function set(value) {\n      this.hsv = {\n        h: value\n      };\n    }\n  }, {\n    key: \"saturation\",\n    get: function get() {\n      return this.$.s;\n    },\n    set: function set(value) {\n      this.hsv = {\n        s: value\n      };\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.$.v;\n    },\n    set: function set(value) {\n      this.hsv = {\n        v: value\n      };\n    }\n  }, {\n    key: \"alpha\",\n    get: function get() {\n      return this.$.a;\n    },\n    set: function set(value) {\n      this.hsv = _extends({}, this.hsv, {\n        a: value\n      });\n    }\n  }, {\n    key: \"kelvin\",\n    get: function get() {\n      return IroColor.rgbToKelvin(this.rgb);\n    },\n    set: function set(value) {\n      this.rgb = IroColor.kelvinToRgb(value);\n    }\n  }, {\n    key: \"red\",\n    get: function get() {\n      var rgb = this.rgb;\n      return rgb.r;\n    },\n    set: function set(value) {\n      this.rgb = _extends({}, this.rgb, {\n        r: value\n      });\n    }\n  }, {\n    key: \"green\",\n    get: function get() {\n      var rgb = this.rgb;\n      return rgb.g;\n    },\n    set: function set(value) {\n      this.rgb = _extends({}, this.rgb, {\n        g: value\n      });\n    }\n  }, {\n    key: \"blue\",\n    get: function get() {\n      var rgb = this.rgb;\n      return rgb.b;\n    },\n    set: function set(value) {\n      this.rgb = _extends({}, this.rgb, {\n        b: value\n      });\n    }\n  }, {\n    key: \"rgb\",\n    get: function get() {\n      var _IroColor$hsvToRgb = IroColor.hsvToRgb(this.$),\n          r = _IroColor$hsvToRgb.r,\n          g = _IroColor$hsvToRgb.g,\n          b = _IroColor$hsvToRgb.b;\n\n      return {\n        r: round(r),\n        g: round(g),\n        b: round(b)\n      };\n    },\n    set: function set(value) {\n      this.hsv = _extends({}, IroColor.rgbToHsv(value), {\n        a: value.a === undefined ? 1 : value.a\n      });\n    }\n  }, {\n    key: \"rgba\",\n    get: function get() {\n      return _extends({}, this.rgb, {\n        a: this.alpha\n      });\n    },\n    set: function set(value) {\n      this.rgb = value;\n    }\n  }, {\n    key: \"hsl\",\n    get: function get() {\n      var _IroColor$hsvToHsl = IroColor.hsvToHsl(this.$),\n          h = _IroColor$hsvToHsl.h,\n          s = _IroColor$hsvToHsl.s,\n          l = _IroColor$hsvToHsl.l;\n\n      return {\n        h: round(h),\n        s: round(s),\n        l: round(l)\n      };\n    },\n    set: function set(value) {\n      this.hsv = _extends({}, IroColor.hslToHsv(value), {\n        a: value.a === undefined ? 1 : value.a\n      });\n    }\n  }, {\n    key: \"hsla\",\n    get: function get() {\n      return _extends({}, this.hsl, {\n        a: this.alpha\n      });\n    },\n    set: function set(value) {\n      this.hsl = value;\n    }\n  }, {\n    key: \"rgbString\",\n    get: function get() {\n      var rgb = this.rgb;\n      return \"rgb(\" + rgb.r + \", \" + rgb.g + \", \" + rgb.b + \")\";\n    },\n    set: function set(value) {\n      var match;\n      var r,\n          g,\n          b,\n          a = 1;\n\n      if (match = REGEX_FUNCTIONAL_RGB.exec(value)) {\n        r = parseUnit(match[1], 255);\n        g = parseUnit(match[2], 255);\n        b = parseUnit(match[3], 255);\n      } else if (match = REGEX_FUNCTIONAL_RGBA.exec(value)) {\n        r = parseUnit(match[1], 255);\n        g = parseUnit(match[2], 255);\n        b = parseUnit(match[3], 255);\n        a = parseUnit(match[4], 1);\n      }\n\n      if (match) {\n        this.rgb = {\n          r: r,\n          g: g,\n          b: b,\n          a: a\n        };\n      } else {\n        throw new Error('Invalid rgb string');\n      }\n    }\n  }, {\n    key: \"rgbaString\",\n    get: function get() {\n      var rgba = this.rgba;\n      return \"rgba(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \", \" + rgba.a + \")\";\n    },\n    set: function set(value) {\n      this.rgbString = value;\n    }\n  }, {\n    key: \"hexString\",\n    get: function get() {\n      var rgb = this.rgb;\n      return \"#\" + intToHex(rgb.r) + intToHex(rgb.g) + intToHex(rgb.b);\n    },\n    set: function set(value) {\n      var match;\n      var r,\n          g,\n          b,\n          a = 255;\n\n      if (match = REGEX_HEX_3.exec(value)) {\n        r = parseHexInt(match[1]) * 17;\n        g = parseHexInt(match[2]) * 17;\n        b = parseHexInt(match[3]) * 17;\n      } else if (match = REGEX_HEX_4.exec(value)) {\n        r = parseHexInt(match[1]) * 17;\n        g = parseHexInt(match[2]) * 17;\n        b = parseHexInt(match[3]) * 17;\n        a = parseHexInt(match[4]) * 17;\n      } else if (match = REGEX_HEX_6.exec(value)) {\n        r = parseHexInt(match[1]);\n        g = parseHexInt(match[2]);\n        b = parseHexInt(match[3]);\n      } else if (match = REGEX_HEX_8.exec(value)) {\n        r = parseHexInt(match[1]);\n        g = parseHexInt(match[2]);\n        b = parseHexInt(match[3]);\n        a = parseHexInt(match[4]);\n      }\n\n      if (match) {\n        this.rgb = {\n          r: r,\n          g: g,\n          b: b,\n          a: a / 255\n        };\n      } else {\n        throw new Error('Invalid hex string');\n      }\n    }\n  }, {\n    key: \"hex8String\",\n    get: function get() {\n      var rgba = this.rgba;\n      return \"#\" + intToHex(rgba.r) + intToHex(rgba.g) + intToHex(rgba.b) + intToHex(floor(rgba.a * 255));\n    },\n    set: function set(value) {\n      this.hexString = value;\n    }\n  }, {\n    key: \"hslString\",\n    get: function get() {\n      var hsl = this.hsl;\n      return \"hsl(\" + hsl.h + \", \" + hsl.s + \"%, \" + hsl.l + \"%)\";\n    },\n    set: function set(value) {\n      var match;\n      var h,\n          s,\n          l,\n          a = 1;\n\n      if (match = REGEX_FUNCTIONAL_HSL.exec(value)) {\n        h = parseUnit(match[1], 360);\n        s = parseUnit(match[2], 100);\n        l = parseUnit(match[3], 100);\n      } else if (match = REGEX_FUNCTIONAL_HSLA.exec(value)) {\n        h = parseUnit(match[1], 360);\n        s = parseUnit(match[2], 100);\n        l = parseUnit(match[3], 100);\n        a = parseUnit(match[4], 1);\n      }\n\n      if (match) {\n        this.hsl = {\n          h: h,\n          s: s,\n          l: l,\n          a: a\n        };\n      } else {\n        throw new Error('Invalid hsl string');\n      }\n    }\n  }, {\n    key: \"hslaString\",\n    get: function get() {\n      var hsla = this.hsla;\n      return \"hsla(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%, \" + hsla.a + \")\";\n    },\n    set: function set(value) {\n      this.hslString = value;\n    }\n  }]);\n\n  return IroColor;\n}();\n\nvar sliderDefaultOptions = {\n  sliderShape: 'bar',\n  sliderType: 'value',\n  minTemperature: 2200,\n  maxTemperature: 11000\n};\n/**\r\n * @desc Get the bounding dimensions of the slider\r\n * @param props - slider props\r\n */\n\nfunction getSliderDimensions(props) {\n  var _sliderSize;\n\n  var width = props.width,\n      sliderSize = props.sliderSize,\n      borderWidth = props.borderWidth,\n      handleRadius = props.handleRadius,\n      padding = props.padding,\n      sliderShape = props.sliderShape;\n  var ishorizontal = props.layoutDirection === 'horizontal'; // automatically calculate sliderSize if its not defined\n\n  sliderSize = (_sliderSize = sliderSize) != null ? _sliderSize : padding * 2 + handleRadius * 2;\n\n  if (sliderShape === 'circle') {\n    return {\n      handleStart: props.padding + props.handleRadius,\n      handleRange: width - padding * 2 - handleRadius * 2,\n      width: width,\n      height: width,\n      cx: width / 2,\n      cy: width / 2,\n      radius: width / 2 - borderWidth / 2\n    };\n  } else {\n    return {\n      handleStart: sliderSize / 2,\n      handleRange: width - sliderSize,\n      radius: sliderSize / 2,\n      x: 0,\n      y: 0,\n      width: ishorizontal ? sliderSize : width,\n      height: ishorizontal ? width : sliderSize\n    };\n  }\n}\n/**\r\n * @desc Get the current slider value for a given color, as a percentage\r\n * @param props - slider props\r\n * @param color\r\n */\n\nfunction getCurrentSliderValue(props, color) {\n  var hsva = color.hsva;\n  var rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return rgb.r / 2.55;\n\n    case 'green':\n      return rgb.g / 2.55;\n\n    case 'blue':\n      return rgb.b / 2.55;\n\n    case 'alpha':\n      return hsva.a * 100;\n\n    case 'kelvin':\n      var minTemperature = props.minTemperature,\n          maxTemperature = props.maxTemperature;\n      var temperatureRange = maxTemperature - minTemperature;\n      var percent = (color.kelvin - minTemperature) / temperatureRange * 100; // clmap percentage\n\n      return Math.max(0, Math.min(percent, 100));\n\n    case 'hue':\n      return hsva.h /= 3.6;\n\n    case 'saturation':\n      return hsva.s;\n\n    case 'value':\n    default:\n      return hsva.v;\n  }\n}\n/**\r\n * @desc Get the current slider value from user input\r\n * @param props - slider props\r\n * @param x - global input x position\r\n * @param y - global input y position\r\n */\n\nfunction getSliderValueFromInput(props, x, y) {\n  var _getSliderDimensions = getSliderDimensions(props),\n      handleRange = _getSliderDimensions.handleRange,\n      handleStart = _getSliderDimensions.handleStart;\n\n  var handlePos;\n\n  if (props.layoutDirection === 'horizontal') {\n    handlePos = -1 * y + handleRange + handleStart;\n  } else {\n    handlePos = x - handleStart;\n  } // clamp handle position\n\n\n  handlePos = Math.max(Math.min(handlePos, handleRange), 0);\n  var percent = Math.round(100 / handleRange * handlePos);\n\n  switch (props.sliderType) {\n    case 'kelvin':\n      var minTemperature = props.minTemperature,\n          maxTemperature = props.maxTemperature;\n      var temperatureRange = maxTemperature - minTemperature;\n      return minTemperature + temperatureRange * (percent / 100);\n\n    case 'alpha':\n      return percent / 100;\n\n    case 'hue':\n      return percent * 3.6;\n\n    case 'red':\n    case 'blue':\n    case 'green':\n      return percent * 2.55;\n\n    default:\n      return percent;\n  }\n}\n/**\r\n * @desc Get the current handle position for a given color\r\n * @param props - slider props\r\n * @param color\r\n */\n\nfunction getSliderHandlePosition(props, color) {\n  var _getSliderDimensions2 = getSliderDimensions(props),\n      width = _getSliderDimensions2.width,\n      height = _getSliderDimensions2.height,\n      handleRange = _getSliderDimensions2.handleRange,\n      handleStart = _getSliderDimensions2.handleStart;\n\n  var ishorizontal = props.layoutDirection === 'horizontal';\n  var sliderValue = getCurrentSliderValue(props, color);\n  var midPoint = ishorizontal ? width / 2 : height / 2;\n  var handlePos = handleStart + sliderValue / 100 * handleRange;\n\n  if (ishorizontal) {\n    handlePos = -1 * handlePos + handleRange + handleStart * 2;\n  }\n\n  return {\n    x: ishorizontal ? midPoint : handlePos,\n    y: ishorizontal ? handlePos : midPoint\n  };\n}\n/**\r\n * @desc Get the gradient stops for a slider\r\n * @param props - slider props\r\n * @param color\r\n */\n\nfunction getSliderGradient(props, color) {\n  var hsv = color.hsv;\n  var rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return [[0, \"rgb(\" + 0 + \",\" + rgb.g + \",\" + rgb.b + \")\"], [100, \"rgb(\" + 255 + \",\" + rgb.g + \",\" + rgb.b + \")\"]];\n\n    case 'green':\n      return [[0, \"rgb(\" + rgb.r + \",\" + 0 + \",\" + rgb.b + \")\"], [100, \"rgb(\" + rgb.r + \",\" + 255 + \",\" + rgb.b + \")\"]];\n\n    case 'blue':\n      return [[0, \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + 0 + \")\"], [100, \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + 255 + \")\"]];\n\n    case 'alpha':\n      return [[0, \"rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",0)\"], [100, \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \")\"]];\n\n    case 'kelvin':\n      var stops = [];\n      var min = props.minTemperature;\n      var max = props.maxTemperature;\n      var numStops = 8;\n      var range = max - min;\n\n      for (var kelvin = min, stop = 0; kelvin < max; kelvin += range / numStops, stop += 1) {\n        var _IroColor$kelvinToRgb = IroColor.kelvinToRgb(kelvin),\n            r = _IroColor$kelvinToRgb.r,\n            g = _IroColor$kelvinToRgb.g,\n            b = _IroColor$kelvinToRgb.b;\n\n        stops.push([100 / numStops * stop, \"rgb(\" + r + \",\" + g + \",\" + b + \")\"]);\n      }\n\n      return stops;\n\n    case 'hue':\n      return [[0, '#f00'], [16.666, '#ff0'], [33.333, '#0f0'], [50, '#0ff'], [66.666, '#00f'], [83.333, '#f0f'], [100, '#f00']];\n\n    case 'saturation':\n      var noSat = IroColor.hsvToHsl({\n        h: hsv.h,\n        s: 0,\n        v: hsv.v\n      });\n      var fullSat = IroColor.hsvToHsl({\n        h: hsv.h,\n        s: 100,\n        v: hsv.v\n      });\n      return [[0, \"hsl(\" + noSat.h + \",\" + noSat.s + \"%,\" + noSat.l + \"%)\"], [100, \"hsl(\" + fullSat.h + \",\" + fullSat.s + \"%,\" + fullSat.l + \"%)\"]];\n\n    case 'value':\n    default:\n      var hsl = IroColor.hsvToHsl({\n        h: hsv.h,\n        s: hsv.s,\n        v: 100\n      });\n      return [[0, '#000'], [100, \"hsl(\" + hsl.h + \",\" + hsl.s + \"%,\" + hsl.l + \"%)\"]];\n  }\n}\n\nvar TAU = Math.PI * 2; // javascript's modulo operator doesn't produce positive numbers with negative input\n// https://dev.to/maurobringolf/a-neat-trick-to-compute-modulo-of-negative-numbers-111e\n\nvar mod = function mod(a, n) {\n  return (a % n + n) % n;\n}; // distance between points (x, y) and (0, 0)\n\n\nvar dist = function dist(x, y) {\n  return Math.sqrt(x * x + y * y);\n};\n/**\r\n * @param props - wheel props\r\n * @internal\r\n */\n\n\nfunction getHandleRange(props) {\n  return props.width / 2 - props.padding - props.handleRadius - props.borderWidth;\n}\n/**\r\n * Returns true if point (x, y) lands inside the wheel\r\n * @param props - wheel props\r\n * @param x\r\n * @param y\r\n */\n\n\nfunction isInputInsideWheel(props, x, y) {\n  var _getWheelDimensions = getWheelDimensions(props),\n      cx = _getWheelDimensions.cx,\n      cy = _getWheelDimensions.cy;\n\n  var r = props.width / 2;\n  return dist(cx - x, cy - y) < r;\n}\n/**\r\n * @desc Get the point as the center of the wheel\r\n * @param props - wheel props\r\n */\n\nfunction getWheelDimensions(props) {\n  var r = props.width / 2;\n  return {\n    width: props.width,\n    radius: r - props.borderWidth,\n    cx: r,\n    cy: r\n  };\n}\n/**\r\n * @desc Translate an angle according to wheelAngle and wheelDirection\r\n * @param props - wheel props\r\n * @param angle - input angle\r\n */\n\nfunction translateWheelAngle(props, angle, invert) {\n  var wheelAngle = props.wheelAngle;\n  var wheelDirection = props.wheelDirection; // inverted and clockwisee\n\n  if (invert && wheelDirection === 'clockwise') { angle = wheelAngle + angle; } // clockwise (input handling)\n  else if (wheelDirection === 'clockwise') { angle = 360 - wheelAngle + angle; } // inverted and anticlockwise\n    else if (invert && wheelDirection === 'anticlockwise') { angle = wheelAngle + 180 - angle; } // anticlockwise (input handling)\n      else if (wheelDirection === 'anticlockwise') { angle = wheelAngle - angle; }\n  return mod(angle, 360);\n}\n/**\r\n * @desc Get the current handle position for a given color\r\n * @param props - wheel props\r\n * @param color\r\n */\n\nfunction getWheelHandlePosition(props, color) {\n  var hsv = color.hsv;\n\n  var _getWheelDimensions2 = getWheelDimensions(props),\n      cx = _getWheelDimensions2.cx,\n      cy = _getWheelDimensions2.cy;\n\n  var handleRange = getHandleRange(props);\n  var handleAngle = (180 + translateWheelAngle(props, hsv.h, true)) * (TAU / 360);\n  var handleDist = hsv.s / 100 * handleRange;\n  var direction = props.wheelDirection === 'clockwise' ? -1 : 1;\n  return {\n    x: cx + handleDist * Math.cos(handleAngle) * direction,\n    y: cy + handleDist * Math.sin(handleAngle) * direction\n  };\n}\n/**\r\n * @desc Get the current wheel value from user input\r\n * @param props - wheel props\r\n * @param x - global input x position\r\n * @param y - global input y position\r\n */\n\nfunction getWheelValueFromInput(props, x, y) {\n  var _getWheelDimensions3 = getWheelDimensions(props),\n      cx = _getWheelDimensions3.cx,\n      cy = _getWheelDimensions3.cy;\n\n  var handleRange = getHandleRange(props);\n  x = cx - x;\n  y = cy - y; // Calculate the hue by converting the angle to radians\n\n  var hue = translateWheelAngle(props, Math.atan2(-y, -x) * (360 / TAU)); // Find the point's distance from the center of the wheel\n  // This is used to show the saturation level\n\n  var handleDist = Math.min(dist(x, y), handleRange);\n  return {\n    h: Math.round(hue),\n    s: Math.round(100 / handleRange * handleDist)\n  };\n}\n/**\r\n * @desc Get the bounding dimensions of the box\r\n * @param props - box props\r\n */\n\nfunction getBoxDimensions(props) {\n  var width = props.width,\n      boxHeight = props.boxHeight,\n      padding = props.padding,\n      handleRadius = props.handleRadius;\n  return {\n    width: width,\n    height: boxHeight != null ? boxHeight : width,\n    radius: padding + handleRadius\n  };\n}\n/**\r\n * @desc Get the current box value from user input\r\n * @param props - box props\r\n * @param x - global input x position\r\n * @param y - global input y position\r\n */\n\nfunction getBoxValueFromInput(props, x, y) {\n  var _getBoxDimensions = getBoxDimensions(props),\n      width = _getBoxDimensions.width,\n      height = _getBoxDimensions.height,\n      radius = _getBoxDimensions.radius;\n\n  var handleStart = radius;\n  var handleRangeX = width - radius * 2;\n  var handleRangeY = height - radius * 2;\n  var percentX = (x - handleStart) / handleRangeX * 100;\n  var percentY = (y - handleStart) / handleRangeY * 100;\n  return {\n    s: Math.max(0, Math.min(percentX, 100)),\n    v: Math.max(0, Math.min(100 - percentY, 100))\n  };\n}\n/**\r\n * @desc Get the current box handle position for a given color\r\n * @param props - box props\r\n * @param color\r\n */\n\nfunction getBoxHandlePosition(props, color) {\n  var _getBoxDimensions2 = getBoxDimensions(props),\n      width = _getBoxDimensions2.width,\n      height = _getBoxDimensions2.height,\n      radius = _getBoxDimensions2.radius;\n\n  var hsv = color.hsv;\n  var handleStart = radius;\n  var handleRangeX = width - radius * 2;\n  var handleRangeY = height - radius * 2;\n  return {\n    x: handleStart + hsv.s / 100 * handleRangeX,\n    y: handleStart + (handleRangeY - hsv.v / 100 * handleRangeY)\n  };\n}\n/**\r\n * @desc Get the gradient stops for a box\r\n * @param props - box props\r\n * @param color\r\n */\n\nfunction getBoxGradients(props, color) {\n  var hue = color.hue;\n  return [// saturation gradient\n  [[0, '#fff'], [100, \"hsl(\" + hue + \",100%,50%)\"]], // lightness gradient\n  [[0, 'rgba(0,0,0,0)'], [100, '#000']]];\n}\n\n// Keep track of html <base> elements for resolveSvgUrl\n// getElementsByTagName returns a live HTMLCollection, which stays in sync with the DOM tree\n// So it only needs to be called once\nvar BASE_ELEMENTS;\n/**\r\n * @desc Resolve an SVG reference URL\r\n * This is required to work around how Safari and iOS webviews handle gradient URLS under certain conditions\r\n * If a page is using a client-side routing library which makes use of the HTML <base> tag,\r\n * Safari won't be able to render SVG gradients properly (as they are referenced by URLs)\r\n * More info on the problem:\r\n * https://stackoverflow.com/questions/19742805/angular-and-svg-filters/19753427#19753427\r\n * https://github.com/jaames/iro.js/issues/18\r\n * https://github.com/jaames/iro.js/issues/45\r\n * https://github.com/jaames/iro.js/pull/89\r\n * @props url - SVG reference URL\r\n */\n\nfunction resolveSvgUrl(url) {\n  if (!BASE_ELEMENTS) { BASE_ELEMENTS = document.getElementsByTagName('base'); } // Sniff useragent string to check if the user is running Safari\n\n  var ua = window.navigator.userAgent;\n  var isSafari = /^((?!chrome|android).)*safari/i.test(ua);\n  var isIos = /iPhone|iPod|iPad/i.test(ua);\n  var location = window.location;\n  return (isSafari || isIos) && BASE_ELEMENTS.length > 0 ? location.protocol + \"//\" + location.host + location.pathname + location.search + url : url;\n}\n/**\r\n * @desc Given a specifc (x, y) position, test if there's a handle there and return its index, else return null.\r\n *       This is used for components like the box and wheel which support multiple handles when multicolor is active\r\n * @props x - point x position\r\n * @props y - point y position\r\n * @props handlePositions - array of {x, y} coords for each handle\r\n */\n\nfunction getHandleAtPoint(props, x, y, handlePositions) {\n  for (var i = 0; i < handlePositions.length; i++) {\n    var dX = handlePositions[i].x - x;\n    var dY = handlePositions[i].y - y;\n    var dist = Math.sqrt(dX * dX + dY * dY);\n\n    if (dist < props.handleRadius) {\n      return i;\n    }\n  }\n\n  return null;\n}\n\nfunction cssBorderStyles(props) {\n  return {\n    boxSizing: 'border-box',\n    border: props.borderWidth + \"px solid \" + props.borderColor\n  };\n}\nfunction cssGradient(type, direction, stops) {\n  return type + \"-gradient(\" + direction + \", \" + stops.map(function (_ref) {\n    var o = _ref[0],\n        col = _ref[1];\n    return col + \" \" + o + \"%\";\n  }).join(',') + \")\";\n}\nfunction cssValue(value) {\n  if (typeof value === 'string') { return value; }\n  return value + \"px\";\n}\n\nvar iroColorPickerOptionDefaults = {\n  width: 300,\n  height: 300,\n  color: '#fff',\n  colors: [],\n  padding: 6,\n  layoutDirection: 'vertical',\n  borderColor: '#fff',\n  borderWidth: 0,\n  handleRadius: 8,\n  activeHandleRadius: null,\n  handleSvg: null,\n  handleProps: {\n    x: 0,\n    y: 0\n  },\n  wheelLightness: true,\n  wheelAngle: 0,\n  wheelDirection: 'anticlockwise',\n  sliderSize: null,\n  sliderMargin: 12,\n  boxHeight: null\n};\n\nvar SECONDARY_EVENTS = [\"mousemove\" /* MouseMove */, \"touchmove\" /* TouchMove */, \"mouseup\" /* MouseUp */, \"touchend\" /* TouchEnd */];\r\n// Base component class for iro UI components\r\n// This extends the Preact component class to allow them to react to mouse/touch input events by themselves\r\nvar IroComponentWrapper = /*@__PURE__*/(function (Component) {\n    function IroComponentWrapper(props) {\r\n        Component.call(this, props);\r\n        // Generate unique ID for the component\r\n        // This can be used to generate unique IDs for gradients, etc\r\n        this.uid = (Math.random() + 1).toString(36).substring(5);\r\n    }\n\n    if ( Component ) IroComponentWrapper.__proto__ = Component;\n    IroComponentWrapper.prototype = Object.create( Component && Component.prototype );\n    IroComponentWrapper.prototype.constructor = IroComponentWrapper;\r\n    IroComponentWrapper.prototype.render = function render (props) {\r\n        var eventHandler = this.handleEvent.bind(this);\r\n        var rootProps = {\r\n            onMouseDown: eventHandler,\r\n            // https://github.com/jaames/iro.js/issues/126\r\n            // https://github.com/preactjs/preact/issues/2113#issuecomment-553408767\r\n            ontouchstart: eventHandler,\r\n        };\r\n        var isHorizontal = props.layoutDirection === 'horizontal';\r\n        var margin = props.margin === null ? props.sliderMargin : props.margin;\r\n        var rootStyles = {\r\n            overflow: 'visible',\r\n            display: isHorizontal ? 'inline-block' : 'block'\r\n        };\r\n        // first component shouldn't have any margin\r\n        if (props.index > 0) {\r\n            rootStyles[isHorizontal ? 'marginLeft' : 'marginTop'] = margin;\r\n        }\r\n        return (h(d, null, props.children(this.uid, rootProps, rootStyles)));\r\n    };\r\n    // More info on handleEvent:\r\n    // https://medium.com/@WebReflection/dom-handleevent-a-cross-platform-standard-since-year-2000-5bf17287fd38\r\n    // TL;DR this lets us have a single point of entry for multiple events, and we can avoid callback/binding hell\r\n    IroComponentWrapper.prototype.handleEvent = function handleEvent (e) {\n        var this$1 = this;\n\r\n        var inputHandler = this.props.onInput;\r\n        // Get the screen position of the component\r\n        var bounds = this.base.getBoundingClientRect();\r\n        // Prefect default browser action\r\n        e.preventDefault();\r\n        // Detect if the event is a touch event by checking if it has the `touches` property\r\n        // If it is a touch event, use the first touch input\r\n        var point = e.touches ? e.changedTouches[0] : e;\r\n        var x = point.clientX - bounds.left;\r\n        var y = point.clientY - bounds.top;\r\n        switch (e.type) {\r\n            case \"mousedown\" /* MouseDown */:\r\n            case \"touchstart\" /* TouchStart */:\r\n                var result = inputHandler(x, y, 0 /* Start */);\r\n                if (result !== false) {\r\n                    SECONDARY_EVENTS.forEach(function (event) {\r\n                        document.addEventListener(event, this$1, { passive: false });\r\n                    });\r\n                }\r\n                break;\r\n            case \"mousemove\" /* MouseMove */:\r\n            case \"touchmove\" /* TouchMove */:\r\n                inputHandler(x, y, 1 /* Move */);\r\n                break;\r\n            case \"mouseup\" /* MouseUp */:\r\n            case \"touchend\" /* TouchEnd */:\r\n                inputHandler(x, y, 2 /* End */);\r\n                SECONDARY_EVENTS.forEach(function (event) {\r\n                    document.removeEventListener(event, this$1, { passive: false });\r\n                });\r\n                break;\r\n        }\r\n    };\n\n    return IroComponentWrapper;\n}(m));\n\nfunction IroHandle(props) {\r\n    var radius = props.r;\r\n    var url = props.url;\r\n    var cx = radius;\r\n    var cy = radius;\r\n    return (h(\"svg\", { className: (\"IroHandle IroHandle--\" + (props.index) + \" \" + (props.isActive ? 'IroHandle--isActive' : '')), style: {\r\n            '-webkit-tap-highlight-color': 'rgba(0, 0, 0, 0);',\r\n            transform: (\"translate(\" + (cssValue(props.x)) + \", \" + (cssValue(props.y)) + \")\"),\r\n            willChange: 'transform',\r\n            top: cssValue(-radius),\r\n            left: cssValue(-radius),\r\n            width: cssValue(radius * 2),\r\n            height: cssValue(radius * 2),\r\n            position: 'absolute',\r\n            overflow: 'visible'\r\n        } },\r\n        url && (h(\"use\", Object.assign({ xlinkHref: resolveSvgUrl(url) }, props.props))),\r\n        !url && (h(\"circle\", { cx: cx, cy: cy, r: radius, fill: \"none\", \"stroke-width\": 2, stroke: \"#000\" })),\r\n        !url && (h(\"circle\", { cx: cx, cy: cy, r: radius - 2, fill: props.fill, \"stroke-width\": 2, stroke: \"#fff\" }))));\r\n}\r\nIroHandle.defaultProps = {\r\n    fill: 'none',\r\n    x: 0,\r\n    y: 0,\r\n    r: 8,\r\n    url: null,\r\n    props: { x: 0, y: 0 }\r\n};\n\nfunction IroSlider(props) {\r\n    var activeIndex = props.activeIndex;\r\n    var activeColor = (activeIndex !== undefined && activeIndex < props.colors.length) ? props.colors[activeIndex] : props.color;\r\n    var ref = getSliderDimensions(props);\n    var width = ref.width;\n    var height = ref.height;\n    var radius = ref.radius;\r\n    var handlePos = getSliderHandlePosition(props, activeColor);\r\n    var gradient = getSliderGradient(props, activeColor);\r\n    function handleInput(x, y, type) {\r\n        var value = getSliderValueFromInput(props, x, y);\r\n        props.parent.inputActive = true;\r\n        activeColor[props.sliderType] = value;\r\n        props.onInput(type, props.id);\r\n    }\r\n    return (h(IroComponentWrapper, Object.assign({}, props, { onInput: handleInput }), function (uid, rootProps, rootStyles) { return (h(\"div\", Object.assign({}, rootProps, { className: \"IroSlider\", style: Object.assign({}, {position: 'relative',\r\n            width: cssValue(width),\r\n            height: cssValue(height),\r\n            borderRadius: cssValue(radius),\r\n            // checkered bg to represent alpha\r\n            background: \"conic-gradient(#ccc 25%, #fff 0 50%, #ccc 0 75%, #fff 0)\",\r\n            backgroundSize: '8px 8px'},\r\n            rootStyles) }),\r\n        h(\"div\", { className: \"IroSliderGradient\", style: Object.assign({}, {position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                borderRadius: cssValue(radius),\r\n                background: cssGradient('linear', props.layoutDirection === 'horizontal' ? 'to top' : 'to right', gradient)},\r\n                cssBorderStyles(props)) }),\r\n        h(IroHandle, { isActive: true, index: activeColor.index, r: props.handleRadius, url: props.handleSvg, props: props.handleProps, x: handlePos.x, y: handlePos.y }))); }));\r\n}\r\nIroSlider.defaultProps = Object.assign({}, sliderDefaultOptions);\n\nfunction IroBox(props) {\r\n    var ref = getBoxDimensions(props);\n    var width = ref.width;\n    var height = ref.height;\n    var radius = ref.radius;\r\n    var colors = props.colors;\r\n    var colorPicker = props.parent;\r\n    var activeIndex = props.activeIndex;\r\n    var activeColor = (activeIndex !== undefined && activeIndex < props.colors.length) ? props.colors[activeIndex] : props.color;\r\n    var gradients = getBoxGradients(props, activeColor);\r\n    var handlePositions = colors.map(function (color) { return getBoxHandlePosition(props, color); });\r\n    function handleInput(x, y, inputType) {\r\n        if (inputType === 0 /* Start */) {\r\n            // getHandleAtPoint() returns the index for the handle if the point 'hits' it, or null otherwise\r\n            var activeHandle = getHandleAtPoint(props, x, y, handlePositions);\r\n            // If the input hit a handle, set it as the active handle, but don't update the color\r\n            if (activeHandle !== null) {\r\n                colorPicker.setActiveColor(activeHandle);\r\n            }\r\n            // If the input didn't hit a handle, set the currently active handle to that position\r\n            else {\r\n                colorPicker.inputActive = true;\r\n                activeColor.hsv = getBoxValueFromInput(props, x, y);\r\n                props.onInput(inputType, props.id);\r\n            }\r\n        }\r\n        // move is fired when the user has started dragging\r\n        else if (inputType === 1 /* Move */) {\r\n            colorPicker.inputActive = true;\r\n            activeColor.hsv = getBoxValueFromInput(props, x, y);\r\n        }\r\n        // let the color picker fire input:start, input:move or input:end events\r\n        props.onInput(inputType, props.id);\r\n    }\r\n    return (h(IroComponentWrapper, Object.assign({}, props, { onInput: handleInput }), function (uid, rootProps, rootStyles) { return (h(\"div\", Object.assign({}, rootProps, { className: \"IroBox\", style: Object.assign({}, {width: cssValue(width),\r\n            height: cssValue(height),\r\n            position: 'relative'},\r\n            rootStyles) }),\r\n        h(\"div\", { className: \"IroBox\", style: Object.assign({}, {width: '100%',\r\n                height: '100%',\r\n                borderRadius: cssValue(radius)},\r\n                cssBorderStyles(props),\r\n                {background: cssGradient('linear', 'to bottom', gradients[1])\r\n                    + ',' +\r\n                    cssGradient('linear', 'to right', gradients[0])}) }),\r\n        colors.filter(function (color) { return color !== activeColor; }).map(function (color) { return (h(IroHandle, { isActive: false, index: color.index, fill: color.hslString, r: props.handleRadius, url: props.handleSvg, props: props.handleProps, x: handlePositions[color.index].x, y: handlePositions[color.index].y })); }),\r\n        h(IroHandle, { isActive: true, index: activeColor.index, fill: activeColor.hslString, r: props.activeHandleRadius || props.handleRadius, url: props.handleSvg, props: props.handleProps, x: handlePositions[activeColor.index].x, y: handlePositions[activeColor.index].y }))); }));\r\n}\n\nvar HUE_GRADIENT_CLOCKWISE = 'conic-gradient(red, yellow, lime, aqua, blue, magenta, red)';\r\nvar HUE_GRADIENT_ANTICLOCKWISE = 'conic-gradient(red, magenta, blue, aqua, lime, yellow, red)';\r\nfunction IroWheel(props) {\r\n    var ref = getWheelDimensions(props);\n    var width = ref.width;\n    var colors = props.colors;\n    var borderWidth = props.borderWidth;\r\n    var colorPicker = props.parent;\r\n    var activeColor = props.color;\r\n    var hsv = activeColor.hsv;\r\n    var handlePositions = colors.map(function (color) { return getWheelHandlePosition(props, color); });\r\n    var circleStyles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n        boxSizing: 'border-box'\r\n    };\r\n    function handleInput(x, y, inputType) {\r\n        if (inputType === 0 /* Start */) {\r\n            // input hitbox is a square, \r\n            // so we want to ignore any initial clicks outside the circular shape of the wheel\r\n            if (!isInputInsideWheel(props, x, y)) {\r\n                // returning false will cease all event handling for this interaction\r\n                return false;\r\n            }\r\n            // getHandleAtPoint() returns the index for the handle if the point 'hits' it, or null otherwise\r\n            var activeHandle = getHandleAtPoint(props, x, y, handlePositions);\r\n            // If the input hit a handle, set it as the active handle, but don't update the color\r\n            if (activeHandle !== null) {\r\n                colorPicker.setActiveColor(activeHandle);\r\n            }\r\n            // If the input didn't hit a handle, set the currently active handle to that position\r\n            else {\r\n                colorPicker.inputActive = true;\r\n                activeColor.hsv = getWheelValueFromInput(props, x, y);\r\n                props.onInput(inputType, props.id);\r\n            }\r\n        }\r\n        // move is fired when the user has started dragging\r\n        else if (inputType === 1 /* Move */) {\r\n            colorPicker.inputActive = true;\r\n            activeColor.hsv = getWheelValueFromInput(props, x, y);\r\n        }\r\n        // let the color picker fire input:start, input:move or input:end events\r\n        props.onInput(inputType, props.id);\r\n    }\r\n    return (h(IroComponentWrapper, Object.assign({}, props, { onInput: handleInput }), function (uid, rootProps, rootStyles) { return (h(\"div\", Object.assign({}, rootProps, { className: \"IroWheel\", style: Object.assign({}, {width: cssValue(width),\r\n            height: cssValue(width),\r\n            position: 'relative'},\r\n            rootStyles) }),\r\n        h(\"div\", { className: \"IroWheelHue\", style: Object.assign({}, circleStyles,\r\n                {transform: (\"rotateZ(\" + (props.wheelAngle + 90) + \"deg)\"),\r\n                background: props.wheelDirection === 'clockwise' ? HUE_GRADIENT_CLOCKWISE : HUE_GRADIENT_ANTICLOCKWISE}) }),\r\n        h(\"div\", { className: \"IroWheelSaturation\", style: Object.assign({}, circleStyles,\r\n                {background: 'radial-gradient(circle closest-side, #fff, transparent)'}) }),\r\n        props.wheelLightness && (h(\"div\", { className: \"IroWheelLightness\", style: Object.assign({}, circleStyles,\r\n                {background: '#000',\r\n                opacity: 1 - hsv.v / 100}) })),\r\n        h(\"div\", { className: \"IroWheelBorder\", style: Object.assign({}, circleStyles,\r\n                cssBorderStyles(props)) }),\r\n        colors.filter(function (color) { return color !== activeColor; }).map(function (color) { return (h(IroHandle, { isActive: false, index: color.index, fill: color.hslString, r: props.handleRadius, url: props.handleSvg, props: props.handleProps, x: handlePositions[color.index].x, y: handlePositions[color.index].y })); }),\r\n        h(IroHandle, { isActive: true, index: activeColor.index, fill: activeColor.hslString, r: props.activeHandleRadius || props.handleRadius, url: props.handleSvg, props: props.handleProps, x: handlePositions[activeColor.index].x, y: handlePositions[activeColor.index].y }))); }));\r\n}\n\nfunction createWidget(WidgetComponent) {\r\n    var widgetFactory = function (parent, props) {\r\n        var widget; // will become an instance of the widget component class\r\n        var widgetRoot = document.createElement('div');\r\n        // Render widget into a temp DOM node\r\n        I(h(WidgetComponent, Object.assign({}, {ref: function (ref) { return widget = ref; }},\r\n            props)), widgetRoot);\r\n        function mountWidget() {\r\n            var container = parent instanceof Element ? parent : document.querySelector(parent);\r\n            container.appendChild(widget.base);\r\n            widget.onMount(container);\r\n        }\r\n        // Mount it into the DOM when the page document is ready\r\n        if (document.readyState !== 'loading') {\r\n            mountWidget();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', mountWidget);\r\n        }\r\n        return widget;\r\n    };\r\n    // Allow the widget factory to inherit component prototype + static class methods\r\n    // This makes it easier for plugin authors to extend the base widget component\r\n    widgetFactory.prototype = WidgetComponent.prototype;\r\n    Object.assign(widgetFactory, WidgetComponent);\r\n    // Add reference to base component too\r\n    widgetFactory.__component = WidgetComponent;\r\n    return widgetFactory;\r\n}\n\nvar IroColorPicker = /*@__PURE__*/(function (Component) {\n    function IroColorPicker(props) {\n        var this$1 = this;\n\r\n        Component.call(this, props);\r\n        this.colors = [];\r\n        this.inputActive = false;\r\n        this.events = {};\r\n        this.activeEvents = {};\r\n        this.deferredEvents = {};\r\n        this.id = props.id;\r\n        var colors = props.colors.length > 0 ? props.colors : [props.color];\r\n        colors.forEach(function (colorValue) { return this$1.addColor(colorValue); });\r\n        this.setActiveColor(0);\r\n        // Pass all the props into the component's state,\r\n        // Except we want to add the color object and make sure that refs aren't passed down to children\r\n        this.state = Object.assign({}, props,\r\n            {color: this.color,\r\n            colors: this.colors,\r\n            layout: props.layout});\r\n    }\n\n    if ( Component ) IroColorPicker.__proto__ = Component;\n    IroColorPicker.prototype = Object.create( Component && Component.prototype );\n    IroColorPicker.prototype.constructor = IroColorPicker;\r\n    // Plubic multicolor API\r\n    /**\r\n    * @desc Add a color to the color picker\r\n    * @param color new color to add\r\n    * @param index optional color index\r\n    */\r\n    IroColorPicker.prototype.addColor = function addColor (color, index) {\n        if ( index === void 0 ) index = this.colors.length;\n\r\n        // Create a new iro.Color\r\n        // Also bind it to onColorChange, so whenever the color changes it updates the color picker\r\n        var newColor = new IroColor(color, this.onColorChange.bind(this));\r\n        // Insert color @ the given index\r\n        this.colors.splice(index, 0, newColor);\r\n        // Reindex colors\r\n        this.colors.forEach(function (color, index) { return color.index = index; });\r\n        // Update picker state if necessary\r\n        if (this.state) {\r\n            this.setState({ colors: this.colors });\r\n        }\r\n        // Fire color init event\r\n        this.deferredEmit('color:init', newColor);\r\n    };\r\n    /**\r\n     * @desc Remove a color from the color picker\r\n     * @param index color index\r\n     */\r\n    IroColorPicker.prototype.removeColor = function removeColor (index) {\r\n        var color = this.colors.splice(index, 1)[0];\r\n        // Destroy the color object -- this unbinds it from the color picker\r\n        color.unbind();\r\n        // Reindex colors\r\n        this.colors.forEach(function (color, index) { return color.index = index; });\r\n        // Update picker state if necessary\r\n        if (this.state) {\r\n            this.setState({ colors: this.colors });\r\n        }\r\n        // If the active color was removed, default active color to 0\r\n        if (color.index === this.color.index) {\r\n            this.setActiveColor(0);\r\n        }\r\n        // Fire color remove event\r\n        this.emit('color:remove', color);\r\n    };\r\n    /**\r\n     * @desc Set the currently active color\r\n     * @param index color index\r\n     */\r\n    IroColorPicker.prototype.setActiveColor = function setActiveColor (index) {\r\n        this.color = this.colors[index];\r\n        if (this.state) {\r\n            this.setState({ color: this.color });\r\n        }\r\n        // Fire color switch event\r\n        this.emit('color:setActive', this.color);\r\n    };\r\n    /**\r\n     * @desc Replace all of the current colorPicker colors\r\n     * @param newColorValues list of new colors to add\r\n     */\r\n    IroColorPicker.prototype.setColors = function setColors (newColorValues, activeColorIndex) {\n        var this$1 = this;\n        if ( activeColorIndex === void 0 ) activeColorIndex = 0;\n\r\n        // Unbind color events\r\n        this.colors.forEach(function (color) { return color.unbind(); });\r\n        // Destroy old colors\r\n        this.colors = [];\r\n        // Add new colors\r\n        newColorValues.forEach(function (colorValue) { return this$1.addColor(colorValue); });\r\n        // Reset active color\r\n        this.setActiveColor(activeColorIndex);\r\n        this.emit('color:setAll', this.colors);\r\n    };\r\n    // Public ColorPicker events API\r\n    /**\r\n     * @desc Set a callback function for an event\r\n     * @param eventList event(s) to listen to\r\n     * @param callback - Function called when the event is fired\r\n     */\r\n    IroColorPicker.prototype.on = function on (eventList, callback) {\n        var this$1 = this;\n\r\n        var events = this.events;\r\n        // eventList can be an eventType string or an array of eventType strings\r\n        (!Array.isArray(eventList) ? [eventList] : eventList).forEach(function (eventType) {\r\n            // Add event callback\r\n            (events[eventType] || (events[eventType] = [])).push(callback);\r\n            // Call deferred events\r\n            // These are events that can be stored until a listener for them is added\r\n            if (this$1.deferredEvents[eventType]) {\r\n                // Deffered events store an array of arguments from when the event was called\r\n                this$1.deferredEvents[eventType].forEach(function (args) {\r\n                    callback.apply(null, args);\r\n                });\r\n                // Clear deferred events\r\n                this$1.deferredEvents[eventType] = [];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @desc Remove a callback function for an event added with on()\r\n     * @param eventList - event(s) to listen to\r\n     * @param callback - original callback function to remove\r\n     */\r\n    IroColorPicker.prototype.off = function off (eventList, callback) {\n        var this$1 = this;\n\r\n        (!Array.isArray(eventList) ? [eventList] : eventList).forEach(function (eventType) {\r\n            var callbackList = this$1.events[eventType];\r\n            // this.emitHook('event:off', eventType, callback);\r\n            if (callbackList)\r\n                { callbackList.splice(callbackList.indexOf(callback), 1); }\r\n        });\r\n    };\r\n    /**\r\n     * @desc Emit an event\r\n     * @param eventType event to emit\r\n     */\r\n    IroColorPicker.prototype.emit = function emit (eventType) {\n        var this$1 = this;\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\r\n        var activeEvents = this.activeEvents;\r\n        var isEventActive = activeEvents.hasOwnProperty(eventType) ? activeEvents[eventType] : false;\r\n        // Prevent event callbacks from firing if the event is already active\r\n        // This stops infinite loops if something in an event callback causes the same event to be fired again\r\n        // (e.g. setting the color inside a color:change callback)\r\n        if (!isEventActive) {\r\n            activeEvents[eventType] = true;\r\n            var callbackList = this.events[eventType] || [];\r\n            callbackList.forEach(function (fn) { return fn.apply(this$1, args); });\r\n            activeEvents[eventType] = false;\r\n        }\r\n    };\r\n    /**\r\n     * @desc Emit an event now, or save it for when the relevent event listener is added\r\n     * @param eventType - The name of the event to emit\r\n     */\r\n    IroColorPicker.prototype.deferredEmit = function deferredEmit (eventType) {\n        var ref;\n\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\r\n        var deferredEvents = this.deferredEvents;\r\n        (ref = this).emit.apply(ref, [ eventType ].concat( args ));\r\n        (deferredEvents[eventType] || (deferredEvents[eventType] = [])).push(args);\r\n    };\r\n    // Public utility methods\r\n    IroColorPicker.prototype.setOptions = function setOptions (newOptions) {\r\n        this.setState(newOptions);\r\n    };\r\n    /**\r\n     * @desc Resize the color picker\r\n     * @param width - new width\r\n     */\r\n    IroColorPicker.prototype.resize = function resize (width) {\r\n        this.setOptions({ width: width });\r\n    };\r\n    /**\r\n     * @desc Reset the color picker to the initial color provided in the color picker options\r\n     */\r\n    IroColorPicker.prototype.reset = function reset () {\r\n        this.colors.forEach(function (color) { return color.reset(); });\r\n        this.setState({ colors: this.colors });\r\n    };\r\n    /**\r\n     * @desc Called by the createWidget wrapper when the element is mounted into the page\r\n     * @param container - the container element for this ColorPicker instance\r\n     */\r\n    IroColorPicker.prototype.onMount = function onMount (container) {\r\n        this.el = container;\r\n        this.deferredEmit('mount', this);\r\n    };\r\n    // Internal methods\r\n    /**\r\n     * @desc React to a color update\r\n     * @param color - current color\r\n     * @param changes - shows which h,s,v,a color channels changed\r\n     */\r\n    IroColorPicker.prototype.onColorChange = function onColorChange (color, changes) {\r\n        this.setState({ color: this.color });\r\n        if (this.inputActive) {\r\n            this.inputActive = false;\r\n            this.emit('input:change', color, changes);\r\n        }\r\n        this.emit('color:change', color, changes);\r\n    };\r\n    /**\r\n     * @desc Handle input from a UI control element\r\n     * @param type - event type\r\n     */\r\n    IroColorPicker.prototype.emitInputEvent = function emitInputEvent (type, originId) {\r\n        if (type === 0 /* Start */) {\r\n            this.emit('input:start', this.color, originId);\r\n        }\r\n        else if (type === 1 /* Move */) {\r\n            this.emit('input:move', this.color, originId);\r\n        }\r\n        else if (type === 2 /* End */) {\r\n            this.emit('input:end', this.color, originId);\r\n        }\r\n    };\r\n    IroColorPicker.prototype.render = function render (props, state) {\n        var this$1 = this;\n\r\n        var layout = state.layout;\r\n        // use layout shorthands\r\n        if (!Array.isArray(layout)) {\r\n            switch (layout) {\r\n                // TODO: implement some?\r\n                default:\r\n                    layout = [\r\n                        { component: IroWheel },\r\n                        { component: IroSlider } ];\r\n            }\r\n            // add transparency slider to the layout\r\n            if (state.transparency) {\r\n                layout.push({\r\n                    component: IroSlider,\r\n                    options: {\r\n                        sliderType: 'alpha'\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return (h(\"div\", { class: \"IroColorPicker\", id: state.id, style: {\r\n                display: state.display\r\n            } }, layout.map(function (ref, componentIndex) {\n                var UiComponent = ref.component;\n                var options = ref.options;\n\n                return (h(UiComponent, Object.assign({}, state, options, { ref: undefined, onInput: this$1.emitInputEvent.bind(this$1), parent: this$1, index: componentIndex })));\n        })));\r\n    };\n\n    return IroColorPicker;\n}(m));\r\nIroColorPicker.defaultProps = Object.assign({}, iroColorPickerOptionDefaults,\r\n    {colors: [],\r\n    display: 'block',\r\n    id: null,\r\n    layout: 'default',\r\n    margin: null});\r\nvar IroColorPickerWidget = createWidget(IroColorPicker);\n\nvar iro;\r\n(function (iro) {\r\n    iro.version = \"5.5.2\"; // replaced by @rollup/plugin-replace; see rollup.config.js\r\n    iro.Color = IroColor;\r\n    iro.ColorPicker = IroColorPickerWidget;\r\n    var ui;\r\n    (function (ui) {\r\n        ui.h = h;\r\n        ui.ComponentBase = IroComponentWrapper;\r\n        ui.Handle = IroHandle;\r\n        ui.Slider = IroSlider;\r\n        ui.Wheel = IroWheel;\r\n        ui.Box = IroBox;\r\n    })(ui = iro.ui || (iro.ui = {}));\r\n})(iro || (iro = {}));\r\nvar iro$1 = iro;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (iro$1);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@jaames/iro/dist/iro.es.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_pages_introPage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/pages/introPage.js */ \"./src/scripts/pages/introPage.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  (0,_scripts_pages_introPage_js__WEBPACK_IMPORTED_MODULE_0__.default)();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJuYW1lcyI6WyJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW5kZXJJbnRyb1BhZ2UiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFHQUEsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixrQkFBMUIsRUFBNkMsWUFBSTtBQUM3Q0Msc0VBQWU7QUFFbEIsQ0FIRCIsImZpbGUiOiIuL3NyYy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZW5kZXJJbnRyb1BhZ2UgZnJvbSAnLi9zY3JpcHRzL3BhZ2VzL2ludHJvUGFnZS5qcydcblxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCgpPT57XG4gICAgcmVuZGVySW50cm9QYWdlKCk7XG5cbn0pIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/character.js":
/*!**********************************!*\
  !*** ./src/scripts/character.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Character; }\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Character = function Character() {\n  _classCallCheck(this, Character);\n\n  var mainCharacter = document.querySelector(\".main-character\");\n  var characterImg = document.createElement('img');\n  characterImg.setAttribute(\"src\", \"/src/image/bald-w.png\");\n  characterImg.classList.add('bald');\n  mainCharacter.appendChild(characterImg);\n  var initialStyle = document.createElement('img');\n  initialStyle.setAttribute(\"src\", \"/src/image/hairstyle/initial/initial.png\");\n  initialStyle.classList.add('hair-style');\n  initialStyle.setAttribute(\"id\", \"initial\");\n  mainCharacter.appendChild(initialStyle);\n  var initialBangs = document.createElement('img');\n  initialBangs.setAttribute(\"src\", \"/src/image/bangs/bangs-1.png\");\n  initialBangs.classList.add('bang-style');\n  initialBangs.setAttribute(\"id\", \"initial-bangs\");\n  mainCharacter.appendChild(initialBangs);\n}; // module.exports = Character;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvc2NyaXB0cy9jaGFyYWN0ZXIuanM/MTgxNSJdLCJuYW1lcyI6WyJDaGFyYWN0ZXIiLCJtYWluQ2hhcmFjdGVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2hhcmFjdGVySW1nIiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImNsYXNzTGlzdCIsImFkZCIsImFwcGVuZENoaWxkIiwiaW5pdGlhbFN0eWxlIiwiaW5pdGlhbEJhbmdzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7SUFBcUJBLFMsR0FDakIscUJBQWE7QUFBQTs7QUFDVCxNQUFNQyxhQUFhLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixpQkFBdkIsQ0FBdEI7QUFFQSxNQUFNQyxZQUFZLEdBQUVGLFFBQVEsQ0FBQ0csYUFBVCxDQUF1QixLQUF2QixDQUFwQjtBQUNBRCxjQUFZLENBQUNFLFlBQWIsQ0FBMEIsS0FBMUIsRUFBZ0MsdUJBQWhDO0FBQ0FGLGNBQVksQ0FBQ0csU0FBYixDQUF1QkMsR0FBdkIsQ0FBMkIsTUFBM0I7QUFDQVAsZUFBYSxDQUFDUSxXQUFkLENBQTBCTCxZQUExQjtBQUVBLE1BQU1NLFlBQVksR0FBRVIsUUFBUSxDQUFDRyxhQUFULENBQXVCLEtBQXZCLENBQXBCO0FBQ0FLLGNBQVksQ0FBQ0osWUFBYixDQUEwQixLQUExQixFQUFnQywwQ0FBaEM7QUFDQUksY0FBWSxDQUFDSCxTQUFiLENBQXVCQyxHQUF2QixDQUEyQixZQUEzQjtBQUNBRSxjQUFZLENBQUNKLFlBQWIsQ0FBMEIsSUFBMUIsRUFBK0IsU0FBL0I7QUFDQUwsZUFBYSxDQUFDUSxXQUFkLENBQTBCQyxZQUExQjtBQUVBLE1BQU1DLFlBQVksR0FBRVQsUUFBUSxDQUFDRyxhQUFULENBQXVCLEtBQXZCLENBQXBCO0FBQ0FNLGNBQVksQ0FBQ0wsWUFBYixDQUEwQixLQUExQixFQUFnQyw4QkFBaEM7QUFDQUssY0FBWSxDQUFDSixTQUFiLENBQXVCQyxHQUF2QixDQUEyQixZQUEzQjtBQUNBRyxjQUFZLENBQUNMLFlBQWIsQ0FBMEIsSUFBMUIsRUFBK0IsZUFBL0I7QUFDQUwsZUFBYSxDQUFDUSxXQUFkLENBQTBCRSxZQUExQjtBQUVILEMsRUFNTCIsImZpbGUiOiIuL3NyYy9zY3JpcHRzL2NoYXJhY3Rlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENoYXJhY3RlcntcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBjb25zdCBtYWluQ2hhcmFjdGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluLWNoYXJhY3RlclwiKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGNoYXJhY3RlckltZz0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgICAgIGNoYXJhY3RlckltZy5zZXRBdHRyaWJ1dGUoXCJzcmNcIixcIi9zcmMvaW1hZ2UvYmFsZC13LnBuZ1wiKTtcbiAgICAgICAgY2hhcmFjdGVySW1nLmNsYXNzTGlzdC5hZGQoJ2JhbGQnKVxuICAgICAgICBtYWluQ2hhcmFjdGVyLmFwcGVuZENoaWxkKGNoYXJhY3RlckltZyk7XG5cbiAgICAgICAgY29uc3QgaW5pdGlhbFN0eWxlPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKVxuICAgICAgICBpbml0aWFsU3R5bGUuc2V0QXR0cmlidXRlKFwic3JjXCIsXCIvc3JjL2ltYWdlL2hhaXJzdHlsZS9pbml0aWFsL2luaXRpYWwucG5nXCIpO1xuICAgICAgICBpbml0aWFsU3R5bGUuY2xhc3NMaXN0LmFkZCgnaGFpci1zdHlsZScpO1xuICAgICAgICBpbml0aWFsU3R5bGUuc2V0QXR0cmlidXRlKFwiaWRcIixcImluaXRpYWxcIilcbiAgICAgICAgbWFpbkNoYXJhY3Rlci5hcHBlbmRDaGlsZChpbml0aWFsU3R5bGUpO1xuXG4gICAgICAgIGNvbnN0IGluaXRpYWxCYW5ncz0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJylcbiAgICAgICAgaW5pdGlhbEJhbmdzLnNldEF0dHJpYnV0ZShcInNyY1wiLFwiL3NyYy9pbWFnZS9iYW5ncy9iYW5ncy0xLnBuZ1wiKTtcbiAgICAgICAgaW5pdGlhbEJhbmdzLmNsYXNzTGlzdC5hZGQoJ2Jhbmctc3R5bGUnKTtcbiAgICAgICAgaW5pdGlhbEJhbmdzLnNldEF0dHJpYnV0ZShcImlkXCIsXCJpbml0aWFsLWJhbmdzXCIpO1xuICAgICAgICBtYWluQ2hhcmFjdGVyLmFwcGVuZENoaWxkKGluaXRpYWxCYW5ncyk7XG5cbiAgICB9XG5cbiAgIFxufVxuXG5cbi8vIG1vZHVsZS5leHBvcnRzID0gQ2hhcmFjdGVyOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/character.js\n");

/***/ }),

/***/ "./src/scripts/pages/gamePage.js":
/*!***************************************!*\
  !*** ./src/scripts/pages/gamePage.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ renderGamePage; }\n/* harmony export */ });\n/* harmony import */ var _character_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../character.js */ \"./src/scripts/character.js\");\n/* harmony import */ var _tools_scissors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tools/scissors */ \"./src/scripts/tools/scissors.js\");\n/* harmony import */ var _tools_curlingIron_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tools/curlingIron.js */ \"./src/scripts/tools/curlingIron.js\");\n/* harmony import */ var _tools_hairDryer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tools/hairDryer.js */ \"./src/scripts/tools/hairDryer.js\");\n/* harmony import */ var _tools_straightener_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tools/straightener.js */ \"./src/scripts/tools/straightener.js\");\n/* harmony import */ var _tools_comb_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tools/comb.js */ \"./src/scripts/tools/comb.js\");\n/* harmony import */ var _tools_bangs_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../tools/bangs.js */ \"./src/scripts/tools/bangs.js\");\n/* harmony import */ var _tools_hairDye_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../tools/hairDye.js */ \"./src/scripts/tools/hairDye.js\");\n\n\n\n\n\n\n\n\nfunction renderGamePage(gender) {\n  //delete all element\n  var salon = document.querySelector('.salon');\n  salon.remove();\n  var startbtnM = document.querySelector('.genderbtn');\n  startbtnM.remove();\n  var startbtnF = document.querySelector('.genderbtn');\n  startbtnF.remove();\n  var leftdiv = document.querySelector('.leftdiv');\n  leftdiv.remove();\n  var rightdiv = document.querySelector('.rightdiv');\n  rightdiv.remove();\n  var mygender = gender;\n  var mainPage = document.querySelector(\".main-page\");\n  var leftbtns = document.createElement('div');\n  leftbtns.classList.add('left-buttons');\n  var middiv = document.createElement('div');\n  var rightbtns = document.createElement('div');\n  rightbtns.classList.add('right-buttons');\n  mainPage.appendChild(leftbtns);\n  mainPage.appendChild(middiv);\n  mainPage.appendChild(rightbtns);\n  var mirror = document.createElement('img');\n  mirror.setAttribute('src', './src/image/tools/mirror.png');\n  mirror.classList.add('mirror');\n  var chardiv = document.createElement('div');\n  chardiv.classList.add('main-character');\n  middiv.appendChild(mirror);\n  middiv.appendChild(chardiv);\n  var character = new _character_js__WEBPACK_IMPORTED_MODULE_0__.default();\n  var scissorsbtn = document.createElement('button');\n  scissorsbtn.classList.add('scissors');\n  var scissorsimg = document.createElement('img');\n  scissorsimg.setAttribute('src', './src/image/tools/scissors.png');\n  scissorsimg.classList.add('tools');\n  scissorsbtn.appendChild(scissorsimg);\n  var curlingIronbtn = document.createElement('button');\n  curlingIronbtn.classList.add('curling-iron');\n  var curlingIronimg = document.createElement('img');\n  curlingIronimg.setAttribute('src', './src/image/tools/curling-iron.png');\n  curlingIronimg.classList.add('tools');\n  curlingIronbtn.appendChild(curlingIronimg);\n  var hairdryerbtn = document.createElement('button');\n  hairdryerbtn.classList.add('hair-dryer');\n  var hairdryerimg = document.createElement('img');\n  hairdryerimg.setAttribute('src', './src/image/tools/hair-dryer.png');\n  hairdryerimg.classList.add('tools');\n  hairdryerbtn.appendChild(hairdryerimg);\n  var straightenerbtn = document.createElement('button');\n  straightenerbtn.classList.add('straightener');\n  var straightenerimg = document.createElement('img');\n  straightenerimg.setAttribute('src', './src/image/tools/straightener.png');\n  straightenerimg.classList.add('tools');\n  straightenerbtn.appendChild(straightenerimg);\n  var hairdyebtn = document.createElement('button');\n  hairdyebtn.classList.add('hair-dye');\n  var hairdyeimg = document.createElement('img');\n  hairdyeimg.setAttribute('src', './src/image/tools/hair-dye.png');\n  hairdyeimg.classList.add('tools');\n  hairdyebtn.appendChild(hairdyeimg);\n  var combbtn = document.createElement('button');\n  combbtn.classList.add('comb');\n  var combimg = document.createElement('img');\n  combimg.setAttribute('src', './src/image/tools/comb.png');\n  combimg.classList.add('tools');\n  combbtn.appendChild(combimg);\n  var bangsbtn = document.createElement('button');\n  bangsbtn.classList.add('bangs');\n  var bangsimg = document.createElement('img');\n  bangsimg.setAttribute('src', './src/image/tools/spray.png');\n  bangsimg.classList.add('tools');\n  bangsbtn.appendChild(bangsimg);\n  rightbtns.appendChild(scissorsbtn);\n  rightbtns.appendChild(curlingIronbtn);\n  rightbtns.appendChild(straightenerbtn);\n  rightbtns.appendChild(hairdryerbtn);\n  rightbtns.appendChild(hairdyebtn);\n  rightbtns.appendChild(combbtn);\n  rightbtns.appendChild(bangsbtn);\n  var scissors = new _tools_scissors__WEBPACK_IMPORTED_MODULE_1__.default();\n  var curlingIron = new _tools_curlingIron_js__WEBPACK_IMPORTED_MODULE_2__.default();\n  var hairdryer = new _tools_hairDryer_js__WEBPACK_IMPORTED_MODULE_3__.default();\n  var straightener = new _tools_straightener_js__WEBPACK_IMPORTED_MODULE_4__.default();\n  var comb = new _tools_comb_js__WEBPACK_IMPORTED_MODULE_5__.default();\n  var bangs = new _tools_bangs_js__WEBPACK_IMPORTED_MODULE_6__.default();\n  var hairdye = new _tools_hairDye_js__WEBPACK_IMPORTED_MODULE_7__.default();\n  console.log(\"this is game page\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/pages/gamePage.js\n");

/***/ }),

/***/ "./src/scripts/pages/introPage.js":
/*!****************************************!*\
  !*** ./src/scripts/pages/introPage.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ renderIntroPage; }\n/* harmony export */ });\n/* harmony import */ var _gamePage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gamePage.js */ \"./src/scripts/pages/gamePage.js\");\n\nfunction renderIntroPage() {\n  var gender = '';\n  var mode = '';\n  var mainPage = document.querySelector(\".main-page\");\n  var salon = document.createElement('img');\n  salon.setAttribute('src', './src/image/hair-salon.png');\n  salon.classList.add('salon');\n  var startbtnF = document.createElement('button');\n  startbtnF.innerHTML = 'SHE';\n  startbtnF.classList.add('genderbtn');\n  startbtnF.addEventListener('click', _gamePage_js__WEBPACK_IMPORTED_MODULE_0__.default);\n  var startbtnM = document.createElement('button');\n  startbtnM.innerHTML = 'HE';\n  startbtnM.classList.add('genderbtn');\n  startbtnM.addEventListener('click', _gamePage_js__WEBPACK_IMPORTED_MODULE_0__.default);\n  var leftdiv = document.createElement('div');\n  leftdiv.classList.add('leftdiv');\n  var rightdiv = document.createElement('div');\n  rightdiv.classList.add('rightdiv');\n  mainPage.appendChild(leftdiv);\n  mainPage.appendChild(salon);\n  mainPage.appendChild(rightdiv);\n  leftdiv.appendChild(startbtnM);\n  rightdiv.appendChild(startbtnF);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvc2NyaXB0cy9wYWdlcy9pbnRyb1BhZ2UuanM/Mzc3YSJdLCJuYW1lcyI6WyJyZW5kZXJJbnRyb1BhZ2UiLCJnZW5kZXIiLCJtb2RlIiwibWFpblBhZ2UiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzYWxvbiIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJjbGFzc0xpc3QiLCJhZGQiLCJzdGFydGJ0bkYiLCJpbm5lckhUTUwiLCJhZGRFdmVudExpc3RlbmVyIiwicmVuZGVyR2FtZVBhZ2UiLCJzdGFydGJ0bk0iLCJsZWZ0ZGl2IiwicmlnaHRkaXYiLCJhcHBlbmRDaGlsZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUVlLFNBQVNBLGVBQVQsR0FBMEI7QUFDckMsTUFBTUMsTUFBTSxHQUFHLEVBQWY7QUFDQSxNQUFNQyxJQUFJLEdBQUMsRUFBWDtBQUNBLE1BQU1DLFFBQVEsR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLFlBQXZCLENBQWpCO0FBQ0EsTUFBTUMsS0FBSyxHQUFHRixRQUFRLENBQUNHLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBZDtBQUNBRCxPQUFLLENBQUNFLFlBQU4sQ0FBbUIsS0FBbkIsRUFBeUIsNEJBQXpCO0FBQ0FGLE9BQUssQ0FBQ0csU0FBTixDQUFnQkMsR0FBaEIsQ0FBb0IsT0FBcEI7QUFHQSxNQUFNQyxTQUFTLEdBQUdQLFFBQVEsQ0FBQ0csYUFBVCxDQUF1QixRQUF2QixDQUFsQjtBQUNBSSxXQUFTLENBQUNDLFNBQVYsR0FBb0IsS0FBcEI7QUFDQUQsV0FBUyxDQUFDRixTQUFWLENBQW9CQyxHQUFwQixDQUF3QixXQUF4QjtBQUNBQyxXQUFTLENBQUNFLGdCQUFWLENBQTJCLE9BQTNCLEVBQW1DQyxpREFBbkM7QUFFQSxNQUFNQyxTQUFTLEdBQUdYLFFBQVEsQ0FBQ0csYUFBVCxDQUF1QixRQUF2QixDQUFsQjtBQUNBUSxXQUFTLENBQUNILFNBQVYsR0FBb0IsSUFBcEI7QUFDQUcsV0FBUyxDQUFDTixTQUFWLENBQW9CQyxHQUFwQixDQUF3QixXQUF4QjtBQUNBSyxXQUFTLENBQUNGLGdCQUFWLENBQTJCLE9BQTNCLEVBQW1DQyxpREFBbkM7QUFFQSxNQUFNRSxPQUFPLEdBQUdaLFFBQVEsQ0FBQ0csYUFBVCxDQUF1QixLQUF2QixDQUFoQjtBQUNBUyxTQUFPLENBQUNQLFNBQVIsQ0FBa0JDLEdBQWxCLENBQXNCLFNBQXRCO0FBQ0EsTUFBTU8sUUFBUSxHQUFHYixRQUFRLENBQUNHLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBakI7QUFDQVUsVUFBUSxDQUFDUixTQUFULENBQW1CQyxHQUFuQixDQUF1QixVQUF2QjtBQUNBUCxVQUFRLENBQUNlLFdBQVQsQ0FBcUJGLE9BQXJCO0FBQ0FiLFVBQVEsQ0FBQ2UsV0FBVCxDQUFxQlosS0FBckI7QUFDQUgsVUFBUSxDQUFDZSxXQUFULENBQXFCRCxRQUFyQjtBQUVBRCxTQUFPLENBQUNFLFdBQVIsQ0FBb0JILFNBQXBCO0FBQ0FFLFVBQVEsQ0FBQ0MsV0FBVCxDQUFxQlAsU0FBckI7QUFJSCIsImZpbGUiOiIuL3NyYy9zY3JpcHRzL3BhZ2VzL2ludHJvUGFnZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZW5kZXJHYW1lUGFnZSBmcm9tIFwiLi9nYW1lUGFnZS5qc1wiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbmRlckludHJvUGFnZSgpe1xuICAgIGNvbnN0IGdlbmRlciA9ICcnO1xuICAgIGNvbnN0IG1vZGU9Jyc7XG4gICAgY29uc3QgbWFpblBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1haW4tcGFnZVwiKTtcbiAgICBjb25zdCBzYWxvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIHNhbG9uLnNldEF0dHJpYnV0ZSgnc3JjJywnLi9zcmMvaW1hZ2UvaGFpci1zYWxvbi5wbmcnKTtcbiAgICBzYWxvbi5jbGFzc0xpc3QuYWRkKCdzYWxvbicpO1xuICAgXG5cbiAgICBjb25zdCBzdGFydGJ0bkYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBzdGFydGJ0bkYuaW5uZXJIVE1MPSdTSEUnXG4gICAgc3RhcnRidG5GLmNsYXNzTGlzdC5hZGQoJ2dlbmRlcmJ0bicpXG4gICAgc3RhcnRidG5GLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyxyZW5kZXJHYW1lUGFnZSk7XG5cbiAgICBjb25zdCBzdGFydGJ0bk0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBzdGFydGJ0bk0uaW5uZXJIVE1MPSdIRSdcbiAgICBzdGFydGJ0bk0uY2xhc3NMaXN0LmFkZCgnZ2VuZGVyYnRuJylcbiAgICBzdGFydGJ0bk0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLHJlbmRlckdhbWVQYWdlKTtcblxuICAgIGNvbnN0IGxlZnRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsZWZ0ZGl2LmNsYXNzTGlzdC5hZGQoJ2xlZnRkaXYnKTtcbiAgICBjb25zdCByaWdodGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHJpZ2h0ZGl2LmNsYXNzTGlzdC5hZGQoJ3JpZ2h0ZGl2Jyk7XG4gICAgbWFpblBhZ2UuYXBwZW5kQ2hpbGQobGVmdGRpdik7XG4gICAgbWFpblBhZ2UuYXBwZW5kQ2hpbGQoc2Fsb24pO1xuICAgIG1haW5QYWdlLmFwcGVuZENoaWxkKHJpZ2h0ZGl2KTtcblxuICAgIGxlZnRkaXYuYXBwZW5kQ2hpbGQoc3RhcnRidG5NKTtcbiAgICByaWdodGRpdi5hcHBlbmRDaGlsZChzdGFydGJ0bkYpO1xuICAgIFxuXG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/pages/introPage.js\n");

/***/ }),

/***/ "./src/scripts/tools/bangs.js":
/*!************************************!*\
  !*** ./src/scripts/tools/bangs.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Bangs; }\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Bangs = /*#__PURE__*/function () {\n  function Bangs() {\n    _classCallCheck(this, Bangs);\n\n    this.bangs_btn = document.querySelector(\".bangs\");\n    this.bangs_obj = document.querySelector(\".bang-style\");\n    this.bangs_btn.addEventListener('click', this.handleBangs.bind(this));\n    console.log(this.bangs_btn);\n  }\n\n  _createClass(Bangs, [{\n    key: \"handleBangs\",\n    value: function handleBangs(e) {\n      e.preventDefault();\n\n      switch (this.bangs_obj.id) {\n        case 'initial-bangs':\n          this.bangs_obj.src = '/src/image/bangs/bangs-2.png';\n          this.bangs_obj.id = 'second-bangs';\n          break;\n\n        case 'second-bangs':\n          this.bangs_obj.src = '/src/image/bangs/bangs-3.png';\n          this.bangs_obj.id = 'third-bangs';\n          break;\n\n        case 'third-bangs':\n          this.bangs_obj.src = '/src/image/bangs/bangs-1.png';\n          this.bangs_obj.id = 'initial-bangs';\n          break;\n      }\n    }\n  }]);\n\n  return Bangs;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvc2NyaXB0cy90b29scy9iYW5ncy5qcz9mOTVjIl0sIm5hbWVzIjpbIkJhbmdzIiwiYmFuZ3NfYnRuIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYmFuZ3Nfb2JqIiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhbmRsZUJhbmdzIiwiYmluZCIsImNvbnNvbGUiLCJsb2ciLCJlIiwicHJldmVudERlZmF1bHQiLCJpZCIsInNyYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQUFxQkEsSztBQUNqQixtQkFBYTtBQUFBOztBQUNULFNBQUtDLFNBQUwsR0FBaUJDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixRQUF2QixDQUFqQjtBQUNBLFNBQUtDLFNBQUwsR0FBaUJGLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixhQUF2QixDQUFqQjtBQUNBLFNBQUtGLFNBQUwsQ0FBZUksZ0JBQWYsQ0FBZ0MsT0FBaEMsRUFBd0MsS0FBS0MsV0FBTCxDQUFpQkMsSUFBakIsQ0FBc0IsSUFBdEIsQ0FBeEM7QUFDQUMsV0FBTyxDQUFDQyxHQUFSLENBQVksS0FBS1IsU0FBakI7QUFDSDs7OztXQUVELHFCQUFZUyxDQUFaLEVBQWM7QUFDVkEsT0FBQyxDQUFDQyxjQUFGOztBQUNBLGNBQU8sS0FBS1AsU0FBTCxDQUFlUSxFQUF0QjtBQUNFLGFBQUssZUFBTDtBQUNJLGVBQUtSLFNBQUwsQ0FBZVMsR0FBZixHQUFxQiw4QkFBckI7QUFDQSxlQUFLVCxTQUFMLENBQWVRLEVBQWYsR0FBb0IsY0FBcEI7QUFDQTs7QUFDSixhQUFLLGNBQUw7QUFDRSxlQUFLUixTQUFMLENBQWVTLEdBQWYsR0FBcUIsOEJBQXJCO0FBQ0EsZUFBS1QsU0FBTCxDQUFlUSxFQUFmLEdBQW9CLGFBQXBCO0FBQ0E7O0FBQ0YsYUFBSyxhQUFMO0FBQ0UsZUFBS1IsU0FBTCxDQUFlUyxHQUFmLEdBQXFCLDhCQUFyQjtBQUNBLGVBQUtULFNBQUwsQ0FBZVEsRUFBZixHQUFvQixlQUFwQjtBQUNBO0FBWko7QUFlUCIsImZpbGUiOiIuL3NyYy9zY3JpcHRzL3Rvb2xzL2JhbmdzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFuZ3N7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgdGhpcy5iYW5nc19idG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJhbmdzXCIpO1xuICAgICAgICB0aGlzLmJhbmdzX29iaiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYmFuZy1zdHlsZVwiKTtcbiAgICAgICAgdGhpcy5iYW5nc19idG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLHRoaXMuaGFuZGxlQmFuZ3MuYmluZCh0aGlzKSlcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5iYW5nc19idG4pXG4gICAgfVxuXG4gICAgaGFuZGxlQmFuZ3MoZSl7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgc3dpdGNoKHRoaXMuYmFuZ3Nfb2JqLmlkICl7XG4gICAgICAgICAgY2FzZSAnaW5pdGlhbC1iYW5ncyc6XG4gICAgICAgICAgICAgIHRoaXMuYmFuZ3Nfb2JqLnNyYyA9ICcvc3JjL2ltYWdlL2JhbmdzL2JhbmdzLTIucG5nJztcbiAgICAgICAgICAgICAgdGhpcy5iYW5nc19vYmouaWQgPSAnc2Vjb25kLWJhbmdzJztcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAnc2Vjb25kLWJhbmdzJzpcbiAgICAgICAgICAgIHRoaXMuYmFuZ3Nfb2JqLnNyYyA9ICcvc3JjL2ltYWdlL2JhbmdzL2JhbmdzLTMucG5nJztcbiAgICAgICAgICAgIHRoaXMuYmFuZ3Nfb2JqLmlkID0gJ3RoaXJkLWJhbmdzJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ3RoaXJkLWJhbmdzJzpcbiAgICAgICAgICAgIHRoaXMuYmFuZ3Nfb2JqLnNyYyA9ICcvc3JjL2ltYWdlL2JhbmdzL2JhbmdzLTEucG5nJztcbiAgICAgICAgICAgIHRoaXMuYmFuZ3Nfb2JqLmlkID0gJ2luaXRpYWwtYmFuZ3MnO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICB9XG59XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/tools/bangs.js\n");

/***/ }),

/***/ "./src/scripts/tools/comb.js":
/*!***********************************!*\
  !*** ./src/scripts/tools/comb.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Comb; }\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Comb = /*#__PURE__*/function () {\n  function Comb() {\n    _classCallCheck(this, Comb);\n\n    this.comb_btn = document.querySelector(\".comb\");\n    this.hair_obj = document.querySelector(\".hair-style\");\n    this.comb_btn.addEventListener('click', this.handleComb.bind(this));\n  }\n\n  _createClass(Comb, [{\n    key: \"handleComb\",\n    value: function handleComb(e) {\n      e.preventDefault();\n\n      switch (this.hair_obj.id) {\n        case 'long-cut':\n          this.hair_obj.src = \"/src/image/hairstyle/long/median.png\";\n          this.hair_obj.id = \"median\";\n          break;\n\n        case 'curling-long-cut':\n          this.hair_obj.src = \"/src/image/hairstyle/curling/curling-median.png\";\n          this.hair_obj.id = \"curling-median\";\n          break;\n\n        case 'straight-long-cut':\n          this.hair_obj.src = \"/src/image/hairstyle/straight/straight-median.png\";\n          this.hair_obj.id = \"straight-median\";\n          break;\n\n        case 'straight-long-cut-end':\n          this.hair_obj.src = \"/src/image/hairstyle/straight/straight-short.png\";\n          this.hair_obj.id = \"straight-short\";\n          break;\n\n        case 'curling-long-cut-end':\n          this.hair_obj.src = \"/src/image/hairstyle/curling/curling-short.png\";\n          this.hair_obj.id = \"curling-short\";\n          break;\n\n        case 'long-cut-end':\n          this.hair_obj.src = \"/src/image/hairstyle/long/long-short.png\";\n          this.hair_obj.id = \"short\";\n          break;\n\n        default:\n          alert(\"it's perfect\");\n      }\n    }\n  }]);\n\n  return Comb;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvc2NyaXB0cy90b29scy9jb21iLmpzP2FkOGQiXSwibmFtZXMiOlsiQ29tYiIsImNvbWJfYnRuIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaGFpcl9vYmoiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlQ29tYiIsImJpbmQiLCJlIiwicHJldmVudERlZmF1bHQiLCJpZCIsInNyYyIsImFsZXJ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQ3FCQSxJO0FBQ2xCLGtCQUFhO0FBQUE7O0FBQ1QsU0FBS0MsUUFBTCxHQUFnQkMsUUFBUSxDQUFDQyxhQUFULENBQXVCLE9BQXZCLENBQWhCO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQkYsUUFBUSxDQUFDQyxhQUFULENBQXVCLGFBQXZCLENBQWhCO0FBQ0EsU0FBS0YsUUFBTCxDQUFjSSxnQkFBZCxDQUErQixPQUEvQixFQUF1QyxLQUFLQyxVQUFMLENBQWdCQyxJQUFoQixDQUFxQixJQUFyQixDQUF2QztBQUNIOzs7O1dBRUQsb0JBQVdDLENBQVgsRUFBYTtBQUNaQSxPQUFDLENBQUNDLGNBQUY7O0FBQ0EsY0FBTyxLQUFLTCxRQUFMLENBQWNNLEVBQXJCO0FBQ0ksYUFBSyxVQUFMO0FBQ0ksZUFBS04sUUFBTCxDQUFjTyxHQUFkLEdBQWtCLHNDQUFsQjtBQUNBLGVBQUtQLFFBQUwsQ0FBY00sRUFBZCxHQUFrQixRQUFsQjtBQUNBOztBQUNKLGFBQUssa0JBQUw7QUFDSSxlQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBa0IsaURBQWxCO0FBQ0EsZUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLGdCQUFsQjtBQUNBOztBQUNKLGFBQUssbUJBQUw7QUFDSSxlQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBa0IsbURBQWxCO0FBQ0EsZUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLGlCQUFsQjtBQUNBOztBQUNKLGFBQUssdUJBQUw7QUFDSSxlQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBa0Isa0RBQWxCO0FBQ0EsZUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLGdCQUFsQjtBQUNBOztBQUNKLGFBQUssc0JBQUw7QUFDSSxlQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBa0IsZ0RBQWxCO0FBQ0EsZUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLGVBQWxCO0FBQ0E7O0FBQ0osYUFBSyxjQUFMO0FBQ0ksZUFBS04sUUFBTCxDQUFjTyxHQUFkLEdBQWtCLDBDQUFsQjtBQUNBLGVBQUtQLFFBQUwsQ0FBY00sRUFBZCxHQUFrQixPQUFsQjtBQUNBOztBQUNKO0FBQ0lFLGVBQUssQ0FBQyxjQUFELENBQUw7QUExQlI7QUE2QkEiLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90b29scy9jb21iLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21ie1xuICAgY29uc3RydWN0b3IoKXtcbiAgICAgICB0aGlzLmNvbWJfYnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb21iXCIpO1xuICAgICAgIHRoaXMuaGFpcl9vYmogPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhhaXItc3R5bGVcIik7XG4gICAgICAgdGhpcy5jb21iX2J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsdGhpcy5oYW5kbGVDb21iLmJpbmQodGhpcykpXG4gICB9XG5cbiAgIGhhbmRsZUNvbWIoZSl7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHN3aXRjaCh0aGlzLmhhaXJfb2JqLmlkICl7XG4gICAgICAgIGNhc2UgJ2xvbmctY3V0JzpcbiAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouc3JjPVwiL3NyYy9pbWFnZS9oYWlyc3R5bGUvbG9uZy9tZWRpYW4ucG5nXCI7XG4gICAgICAgICAgICB0aGlzLmhhaXJfb2JqLmlkID1cIm1lZGlhblwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2N1cmxpbmctbG9uZy1jdXQnOlxuICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmM9XCIvc3JjL2ltYWdlL2hhaXJzdHlsZS9jdXJsaW5nL2N1cmxpbmctbWVkaWFuLnBuZ1wiO1xuICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJjdXJsaW5nLW1lZGlhblwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3N0cmFpZ2h0LWxvbmctY3V0JzpcbiAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouc3JjPVwiL3NyYy9pbWFnZS9oYWlyc3R5bGUvc3RyYWlnaHQvc3RyYWlnaHQtbWVkaWFuLnBuZ1wiO1xuICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJzdHJhaWdodC1tZWRpYW5cIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdzdHJhaWdodC1sb25nLWN1dC1lbmQnOlxuICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmM9XCIvc3JjL2ltYWdlL2hhaXJzdHlsZS9zdHJhaWdodC9zdHJhaWdodC1zaG9ydC5wbmdcIjtcbiAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouaWQgPVwic3RyYWlnaHQtc2hvcnRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdjdXJsaW5nLWxvbmctY3V0LWVuZCc6XG4gICAgICAgICAgICB0aGlzLmhhaXJfb2JqLnNyYz1cIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2N1cmxpbmcvY3VybGluZy1zaG9ydC5wbmdcIjtcbiAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouaWQgPVwiY3VybGluZy1zaG9ydFwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2xvbmctY3V0LWVuZCc6XG4gICAgICAgICAgICB0aGlzLmhhaXJfb2JqLnNyYz1cIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2xvbmcvbG9uZy1zaG9ydC5wbmdcIjtcbiAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouaWQgPVwic2hvcnRcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYWxlcnQoXCJpdCdzIHBlcmZlY3RcIik7XG4gICAgICAgIFxuICAgICAgICB9XG4gICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/tools/comb.js\n");

/***/ }),

/***/ "./src/scripts/tools/curlingIron.js":
/*!******************************************!*\
  !*** ./src/scripts/tools/curlingIron.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CurlingIron; }\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CurlingIron = function CurlingIron() {\n  _classCallCheck(this, CurlingIron);\n\n  _defineProperty(this, \"handleCurlingIron\", function (e) {\n    e.preventDefault();\n\n    if (this.hair_obj.id === 'initial' || this.hair_obj.id === 'long' || this.hair_obj.id === 'straight-long') {\n      this.hair_obj.src = \"/src/image/hairstyle/curling/curling-long.png\";\n      this.hair_obj.id = \"curling-long\";\n    } else if (this.hair_obj.id === 'median' || this.hair_obj.id === 'straight-median' || this.hair_obj.id === 'blow') {\n      this.hair_obj.src = \"/src/image/hairstyle/curling/curling-median.png\";\n      this.hair_obj.id = \"curling-median\";\n    } else if (this.hair_obj.id === 'short' || this.hair_obj.id === 'straight-short') {\n      this.hair_obj.src = \"/src/image/hairstyle/curling/curling-short.png\";\n      this.hair_obj.id = \"curling-short\";\n    } else if (this.hair_obj.id === 'long-cut' || this.hair_obj.id === 'long-cut-end' || this.hair_obj.id === 'curling-long-cut' || this.hair_obj.id === 'curling-long-cut-end' || this.hair_obj.id === 'straight-long-cut' || this.hair_obj.id === 'straight-long-cut-end') {\n      alert('Please comb your hair first');\n    } else {\n      alert('it is perfect');\n    }\n  });\n\n  this.curling_btn = document.querySelector(\".curling-iron\");\n  this.hair_obj = document.querySelector(\".hair-style\");\n  this.curling_btn.addEventListener('click', this.handleCurlingIron.bind(this));\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvc2NyaXB0cy90b29scy9jdXJsaW5nSXJvbi5qcz80NjI0Il0sIm5hbWVzIjpbIkN1cmxpbmdJcm9uIiwiZSIsInByZXZlbnREZWZhdWx0IiwiaGFpcl9vYmoiLCJpZCIsInNyYyIsImFsZXJ0IiwiY3VybGluZ19idG4iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlQ3VybGluZ0lyb24iLCJiaW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztJQUFxQkEsVyxHQUNqQix1QkFBYTtBQUFBOztBQUFBLDZDQU9LLFVBQVNDLENBQVQsRUFBVztBQUN6QkEsS0FBQyxDQUFDQyxjQUFGOztBQUVBLFFBQUcsS0FBS0MsUUFBTCxDQUFjQyxFQUFkLEtBQXFCLFNBQXJCLElBQWtDLEtBQUtELFFBQUwsQ0FBY0MsRUFBZCxLQUFtQixNQUFyRCxJQUE4RCxLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBb0IsZUFBckYsRUFBcUc7QUFDbEcsV0FBS0QsUUFBTCxDQUFjRSxHQUFkLEdBQWtCLCtDQUFsQjtBQUNBLFdBQUtGLFFBQUwsQ0FBY0MsRUFBZCxHQUFrQixjQUFsQjtBQUNGLEtBSEQsTUFHTSxJQUFHLEtBQUtELFFBQUwsQ0FBY0MsRUFBZCxLQUFxQixRQUFyQixJQUErQixLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBcUIsaUJBQXBELElBQXVFLEtBQUtELFFBQUwsQ0FBY0MsRUFBZCxLQUFxQixNQUEvRixFQUFzRztBQUN4RyxXQUFLRCxRQUFMLENBQWNFLEdBQWQsR0FBa0IsaURBQWxCO0FBQ0QsV0FBS0YsUUFBTCxDQUFjQyxFQUFkLEdBQWtCLGdCQUFsQjtBQUNGLEtBSEssTUFHQSxJQUFHLEtBQUtELFFBQUwsQ0FBY0MsRUFBZCxLQUFxQixPQUFyQixJQUFnQyxLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBcUIsZ0JBQXhELEVBQXlFO0FBQzNFLFdBQUtELFFBQUwsQ0FBY0UsR0FBZCxHQUFrQixnREFBbEI7QUFDRCxXQUFLRixRQUFMLENBQWNDLEVBQWQsR0FBa0IsZUFBbEI7QUFDRixLQUhLLE1BR0EsSUFBSSxLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBcUIsVUFBckIsSUFBaUMsS0FBS0QsUUFBTCxDQUFjQyxFQUFkLEtBQXFCLGNBQXRELElBQXVFLEtBQUtELFFBQUwsQ0FBY0MsRUFBZCxLQUFvQixrQkFBM0YsSUFBK0csS0FBS0QsUUFBTCxDQUFjQyxFQUFkLEtBQW9CLHNCQUFuSSxJQUEySixLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBb0IsbUJBQS9LLElBQW9NLEtBQUtELFFBQUwsQ0FBY0MsRUFBZCxLQUFvQix1QkFBNU4sRUFBb1A7QUFDdFBFLFdBQUssQ0FBQyw2QkFBRCxDQUFMO0FBQ0gsS0FGSyxNQUVEO0FBQ0RBLFdBQUssQ0FBQyxlQUFELENBQUw7QUFDSDtBQUNKLEdBeEJZOztBQUNULE9BQUtDLFdBQUwsR0FBbUJDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixlQUF2QixDQUFuQjtBQUNBLE9BQUtOLFFBQUwsR0FBZ0JLLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixhQUF2QixDQUFoQjtBQUNBLE9BQUtGLFdBQUwsQ0FBaUJHLGdCQUFqQixDQUFrQyxPQUFsQyxFQUEwQyxLQUFLQyxpQkFBTCxDQUF1QkMsSUFBdkIsQ0FBNEIsSUFBNUIsQ0FBMUM7QUFDSCxDIiwiZmlsZSI6Ii4vc3JjL3NjcmlwdHMvdG9vbHMvY3VybGluZ0lyb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDdXJsaW5nSXJvbntcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICB0aGlzLmN1cmxpbmdfYnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jdXJsaW5nLWlyb25cIik7XG4gICAgICAgIHRoaXMuaGFpcl9vYmogPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhhaXItc3R5bGVcIik7XG4gICAgICAgIHRoaXMuY3VybGluZ19idG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLHRoaXMuaGFuZGxlQ3VybGluZ0lyb24uYmluZCh0aGlzKSlcbiAgICB9XG5cblxuICAgIGhhbmRsZUN1cmxpbmdJcm9uPWZ1bmN0aW9uKGUpe1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIFxuICAgICAgICBpZih0aGlzLmhhaXJfb2JqLmlkID09PSAnaW5pdGlhbCcgfHwgdGhpcy5oYWlyX29iai5pZD09PSdsb25nJyB8fHRoaXMuaGFpcl9vYmouaWQgPT09J3N0cmFpZ2h0LWxvbmcnKXtcbiAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmM9XCIvc3JjL2ltYWdlL2hhaXJzdHlsZS9jdXJsaW5nL2N1cmxpbmctbG9uZy5wbmdcIjtcbiAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJjdXJsaW5nLWxvbmdcIjtcbiAgICAgICAgfWVsc2UgaWYodGhpcy5oYWlyX29iai5pZCA9PT0gJ21lZGlhbid8fHRoaXMuaGFpcl9vYmouaWQgPT09ICdzdHJhaWdodC1tZWRpYW4nfHx0aGlzLmhhaXJfb2JqLmlkID09PSAnYmxvdycpe1xuICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmM9XCIvc3JjL2ltYWdlL2hhaXJzdHlsZS9jdXJsaW5nL2N1cmxpbmctbWVkaWFuLnBuZ1wiO1xuICAgICAgICAgICB0aGlzLmhhaXJfb2JqLmlkID1cImN1cmxpbmctbWVkaWFuXCI7XG4gICAgICAgIH1lbHNlIGlmKHRoaXMuaGFpcl9vYmouaWQgPT09ICdzaG9ydCcgfHwgdGhpcy5oYWlyX29iai5pZCA9PT0gJ3N0cmFpZ2h0LXNob3J0Jyl7XG4gICAgICAgICAgICB0aGlzLmhhaXJfb2JqLnNyYz1cIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2N1cmxpbmcvY3VybGluZy1zaG9ydC5wbmdcIjtcbiAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJjdXJsaW5nLXNob3J0XCI7XG4gICAgICAgIH1lbHNlIGlmICh0aGlzLmhhaXJfb2JqLmlkID09PSAnbG9uZy1jdXQnfHx0aGlzLmhhaXJfb2JqLmlkID09PSAnbG9uZy1jdXQtZW5kJyB8fHRoaXMuaGFpcl9vYmouaWQgPT09J2N1cmxpbmctbG9uZy1jdXQnfHx0aGlzLmhhaXJfb2JqLmlkID09PSdjdXJsaW5nLWxvbmctY3V0LWVuZCd8fHRoaXMuaGFpcl9vYmouaWQgPT09J3N0cmFpZ2h0LWxvbmctY3V0J3x8dGhpcy5oYWlyX29iai5pZCA9PT0nc3RyYWlnaHQtbG9uZy1jdXQtZW5kJyl7XG4gICAgICAgICAgICBhbGVydCgnUGxlYXNlIGNvbWIgeW91ciBoYWlyIGZpcnN0JylcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICBhbGVydCgnaXQgaXMgcGVyZmVjdCcpXG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/tools/curlingIron.js\n");

/***/ }),

/***/ "./src/scripts/tools/hairDryer.js":
/*!****************************************!*\
  !*** ./src/scripts/tools/hairDryer.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ HairDryer; }\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar HairDryer = /*#__PURE__*/function () {\n  function HairDryer() {\n    _classCallCheck(this, HairDryer);\n\n    this.dryer_btn = document.querySelector(\".hair-dryer\");\n    this.hair_obj = document.querySelector(\".hair-style\");\n    this.dryer_btn.addEventListener('click', this.handleDryer.bind(this));\n  }\n\n  _createClass(HairDryer, [{\n    key: \"handleDryer\",\n    value: function handleDryer(e) {\n      e.preventDefault();\n\n      if (this.hair_obj.id === 'curling-long') {\n        this.hair_obj.src = \"/src/image/hairstyle/long/long.png\";\n        this.hair_obj.id = \"long\";\n      } else if (this.hair_obj.id === 'straight-long') {\n        this.hair_obj.src = \"/src/image/hairstyle/initial/initial.png\";\n        this.hair_obj.id = \"initial\";\n      } else if (this.hair_obj.id === 'straight-median') {\n        this.hair_obj.src = \"/src/image/hairstyle/straight/straight-median-blow.png\";\n        this.hair_obj.id = \"blow\";\n      } else if (this.hair_obj.id === 'curling-median') {\n        this.hair_obj.src = \"/src/image/hairstyle/long/median.png\";\n        this.hair_obj.id = \"median\";\n      } else if (this.hair_obj.id === 'curling-short') {\n        this.hair_obj.src = \"/src/image/hairstyle/long/long-short.png\";\n        this.hair_obj.id = \"short\";\n      } else if (this.hair_obj.id === 'long-cut' || this.hair_obj.id === 'long-cut-end' || this.hair_obj.id === 'curling-long-cut' || this.hair_obj.id === 'curling-long-cut-end' || this.hair_obj.id === 'straight-long-cut' || this.hair_obj.id === 'straight-long-cut-end') {\n        alert('Please comb your hair first');\n      } else {\n        alert('it is perfect');\n      }\n    }\n  }]);\n\n  return HairDryer;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvc2NyaXB0cy90b29scy9oYWlyRHJ5ZXIuanM/Yjc3OSJdLCJuYW1lcyI6WyJIYWlyRHJ5ZXIiLCJkcnllcl9idG4iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJoYWlyX29iaiIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVEcnllciIsImJpbmQiLCJlIiwicHJldmVudERlZmF1bHQiLCJpZCIsInNyYyIsImFsZXJ0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQXFCQSxTO0FBQ2pCLHVCQUFhO0FBQUE7O0FBQ1QsU0FBS0MsU0FBTCxHQUFpQkMsUUFBUSxDQUFDQyxhQUFULENBQXVCLGFBQXZCLENBQWpCO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQkYsUUFBUSxDQUFDQyxhQUFULENBQXVCLGFBQXZCLENBQWhCO0FBQ0EsU0FBS0YsU0FBTCxDQUFlSSxnQkFBZixDQUFnQyxPQUFoQyxFQUF3QyxLQUFLQyxXQUFMLENBQWlCQyxJQUFqQixDQUFzQixJQUF0QixDQUF4QztBQUNIOzs7O1dBRUQscUJBQVlDLENBQVosRUFBYztBQUNWQSxPQUFDLENBQUNDLGNBQUY7O0FBRUEsVUFBSSxLQUFLTCxRQUFMLENBQWNNLEVBQWQsS0FBcUIsY0FBekIsRUFBd0M7QUFDcEMsYUFBS04sUUFBTCxDQUFjTyxHQUFkLEdBQWtCLG9DQUFsQjtBQUNBLGFBQUtQLFFBQUwsQ0FBY00sRUFBZCxHQUFrQixNQUFsQjtBQUNGLE9BSEYsTUFHTyxJQUFHLEtBQUtOLFFBQUwsQ0FBY00sRUFBZCxLQUFtQixlQUF0QixFQUFzQztBQUN6QyxhQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBa0IsMENBQWxCO0FBQ0EsYUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLFNBQWxCO0FBQ0YsT0FISyxNQUdBLElBQUksS0FBS04sUUFBTCxDQUFjTSxFQUFkLEtBQXFCLGlCQUF6QixFQUEyQztBQUM5QyxhQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBa0Isd0RBQWxCO0FBQ0EsYUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLE1BQWxCO0FBQ0YsT0FISyxNQUdBLElBQUcsS0FBS04sUUFBTCxDQUFjTSxFQUFkLEtBQXFCLGdCQUF4QixFQUF5QztBQUM1QyxhQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBa0Isc0NBQWxCO0FBQ0EsYUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLFFBQWxCO0FBQ0YsT0FISyxNQUdBLElBQUcsS0FBS04sUUFBTCxDQUFjTSxFQUFkLEtBQXFCLGVBQXhCLEVBQXdDO0FBQzNDLGFBQUtOLFFBQUwsQ0FBY08sR0FBZCxHQUFrQiwwQ0FBbEI7QUFDQSxhQUFLUCxRQUFMLENBQWNNLEVBQWQsR0FBa0IsT0FBbEI7QUFDRixPQUhLLE1BR0EsSUFBSSxLQUFLTixRQUFMLENBQWNNLEVBQWQsS0FBcUIsVUFBckIsSUFBaUMsS0FBS04sUUFBTCxDQUFjTSxFQUFkLEtBQXFCLGNBQXRELElBQXVFLEtBQUtOLFFBQUwsQ0FBY00sRUFBZCxLQUFvQixrQkFBM0YsSUFBK0csS0FBS04sUUFBTCxDQUFjTSxFQUFkLEtBQW9CLHNCQUFuSSxJQUEySixLQUFLTixRQUFMLENBQWNNLEVBQWQsS0FBb0IsbUJBQS9LLElBQW9NLEtBQUtOLFFBQUwsQ0FBY00sRUFBZCxLQUFvQix1QkFBNU4sRUFBb1A7QUFDdlBFLGFBQUssQ0FBQyw2QkFBRCxDQUFMO0FBQ0gsT0FGTSxNQUVGO0FBQ0ZBLGFBQUssQ0FBQyxlQUFELENBQUw7QUFDRjtBQUlKIiwiZmlsZSI6Ii4vc3JjL3NjcmlwdHMvdG9vbHMvaGFpckRyeWVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGFpckRyeWVye1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHRoaXMuZHJ5ZXJfYnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oYWlyLWRyeWVyXCIpO1xuICAgICAgICB0aGlzLmhhaXJfb2JqID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oYWlyLXN0eWxlXCIpO1xuICAgICAgICB0aGlzLmRyeWVyX2J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsdGhpcy5oYW5kbGVEcnllci5iaW5kKHRoaXMpKVxuICAgIH1cblxuICAgIGhhbmRsZURyeWVyKGUpe1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBcbiAgICAgICAgaWYoIHRoaXMuaGFpcl9vYmouaWQgPT09ICdjdXJsaW5nLWxvbmcnKXtcbiAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouc3JjPVwiL3NyYy9pbWFnZS9oYWlyc3R5bGUvbG9uZy9sb25nLnBuZ1wiO1xuICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJsb25nXCI7XG4gICAgICAgICB9ZWxzZSBpZih0aGlzLmhhaXJfb2JqLmlkPT09J3N0cmFpZ2h0LWxvbmcnKXtcbiAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouc3JjPVwiL3NyYy9pbWFnZS9oYWlyc3R5bGUvaW5pdGlhbC9pbml0aWFsLnBuZ1wiO1xuICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJpbml0aWFsXCI7XG4gICAgICAgICB9ZWxzZSBpZiggdGhpcy5oYWlyX29iai5pZCA9PT0gJ3N0cmFpZ2h0LW1lZGlhbicpe1xuICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmM9XCIvc3JjL2ltYWdlL2hhaXJzdHlsZS9zdHJhaWdodC9zdHJhaWdodC1tZWRpYW4tYmxvdy5wbmdcIjtcbiAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouaWQgPVwiYmxvd1wiO1xuICAgICAgICAgfWVsc2UgaWYodGhpcy5oYWlyX29iai5pZCA9PT0gJ2N1cmxpbmctbWVkaWFuJyl7XG4gICAgICAgICAgICB0aGlzLmhhaXJfb2JqLnNyYz1cIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2xvbmcvbWVkaWFuLnBuZ1wiO1xuICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJtZWRpYW5cIjtcbiAgICAgICAgIH1lbHNlIGlmKHRoaXMuaGFpcl9vYmouaWQgPT09ICdjdXJsaW5nLXNob3J0Jyl7XG4gICAgICAgICAgICB0aGlzLmhhaXJfb2JqLnNyYz1cIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2xvbmcvbG9uZy1zaG9ydC5wbmdcIjtcbiAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouaWQgPVwic2hvcnRcIjtcbiAgICAgICAgIH1lbHNlIGlmICh0aGlzLmhhaXJfb2JqLmlkID09PSAnbG9uZy1jdXQnfHx0aGlzLmhhaXJfb2JqLmlkID09PSAnbG9uZy1jdXQtZW5kJyB8fHRoaXMuaGFpcl9vYmouaWQgPT09J2N1cmxpbmctbG9uZy1jdXQnfHx0aGlzLmhhaXJfb2JqLmlkID09PSdjdXJsaW5nLWxvbmctY3V0LWVuZCd8fHRoaXMuaGFpcl9vYmouaWQgPT09J3N0cmFpZ2h0LWxvbmctY3V0J3x8dGhpcy5oYWlyX29iai5pZCA9PT0nc3RyYWlnaHQtbG9uZy1jdXQtZW5kJyl7XG4gICAgICAgICAgICBhbGVydCgnUGxlYXNlIGNvbWIgeW91ciBoYWlyIGZpcnN0JylcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgIGFsZXJ0KCdpdCBpcyBwZXJmZWN0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgXG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/tools/hairDryer.js\n");

/***/ }),

/***/ "./src/scripts/tools/hairDye.js":
/*!**************************************!*\
  !*** ./src/scripts/tools/hairDye.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ HairDye; }\n/* harmony export */ });\n/* harmony import */ var _jaames_iro__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jaames/iro */ \"./node_modules/@jaames/iro/dist/iro.es.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar HairDye = /*#__PURE__*/function () {\n  function HairDye() {\n    _classCallCheck(this, HairDye);\n\n    this.dye_btn = document.querySelector(\".hair-dye\");\n    this.hair_obj = document.querySelector(\".hair-style\");\n    this.dye_btn.addEventListener('click', this.handleDye.bind(this));\n    console.log(this.dye_btn);\n  }\n\n  _createClass(HairDye, [{\n    key: \"handleDye\",\n    value: function handleDye(e) {\n      e.preventDefault();\n      var colors = document.createElement('div');\n      colors.classList.add('wheel');\n      colors.setAttribute('id', 'colorWheel');\n      this.dye_btn.appendChild(colors);\n      console.log(colors);\n      var colorWheel = new _jaames_iro__WEBPACK_IMPORTED_MODULE_0__.default.ColorPicker(\"#colorWheel\", {\n        layout: [{\n          component: _jaames_iro__WEBPACK_IMPORTED_MODULE_0__.default.ui.Wheel,\n          options: {\n            wheelLightness: true,\n            wheelAngle: 0,\n            wheelDirection: \"anticlockwise\"\n          }\n        } // {\n        // component: iro.ui.Box,\n        // options: {\n        //     // see below\n        // }\n        // },\n        // {\n        // component: iro.ui.Slider,\n        // options: {\n        //     sliderType: 'hue' ,\n        //     sliderShape: 'circle',\n        //     activeIndex: 2\n        // }\n        // }\n        ]\n      });\n    }\n  }]);\n\n  return HairDye;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvc2NyaXB0cy90b29scy9oYWlyRHllLmpzP2NiZmUiXSwibmFtZXMiOlsiSGFpckR5ZSIsImR5ZV9idG4iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJoYWlyX29iaiIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVEeWUiLCJiaW5kIiwiY29uc29sZSIsImxvZyIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImNvbG9ycyIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRBdHRyaWJ1dGUiLCJhcHBlbmRDaGlsZCIsImNvbG9yV2hlZWwiLCJpcm8iLCJsYXlvdXQiLCJjb21wb25lbnQiLCJvcHRpb25zIiwid2hlZWxMaWdodG5lc3MiLCJ3aGVlbEFuZ2xlIiwid2hlZWxEaXJlY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0lBRXFCQSxPO0FBQ2pCLHFCQUFhO0FBQUE7O0FBQ1QsU0FBS0MsT0FBTCxHQUFlQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsV0FBdkIsQ0FBZjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JGLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixhQUF2QixDQUFoQjtBQUNBLFNBQUtGLE9BQUwsQ0FBYUksZ0JBQWIsQ0FBOEIsT0FBOUIsRUFBc0MsS0FBS0MsU0FBTCxDQUFlQyxJQUFmLENBQW9CLElBQXBCLENBQXRDO0FBQ0FDLFdBQU8sQ0FBQ0MsR0FBUixDQUFZLEtBQUtSLE9BQWpCO0FBRUg7Ozs7V0FFRCxtQkFBVVMsQ0FBVixFQUFZO0FBQ1JBLE9BQUMsQ0FBQ0MsY0FBRjtBQUNBLFVBQU1DLE1BQU0sR0FBRVYsUUFBUSxDQUFDVyxhQUFULENBQXVCLEtBQXZCLENBQWQ7QUFDQUQsWUFBTSxDQUFDRSxTQUFQLENBQWlCQyxHQUFqQixDQUFxQixPQUFyQjtBQUNBSCxZQUFNLENBQUNJLFlBQVAsQ0FBb0IsSUFBcEIsRUFBeUIsWUFBekI7QUFDQSxXQUFLZixPQUFMLENBQWFnQixXQUFiLENBQXlCTCxNQUF6QjtBQUNBSixhQUFPLENBQUNDLEdBQVIsQ0FBWUcsTUFBWjtBQUNKLFVBQUlNLFVBQVUsR0FBRyxJQUFJQyw0REFBSixDQUFvQixhQUFwQixFQUFtQztBQUVoREMsY0FBTSxFQUFFLENBQ1I7QUFDQUMsbUJBQVMsRUFBRUYseURBRFg7QUFFQUcsaUJBQU8sRUFBRTtBQUNMQywwQkFBYyxFQUFFLElBRFg7QUFFTEMsc0JBQVUsRUFBRSxDQUZQO0FBR0xDLDBCQUFjLEVBQUU7QUFIWDtBQUZULFNBRFEsQ0FTUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdEJRO0FBRndDLE9BQW5DLENBQWpCO0FBNkJLIiwiZmlsZSI6Ii4vc3JjL3NjcmlwdHMvdG9vbHMvaGFpckR5ZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpcm8gZnJvbSBcIkBqYWFtZXMvaXJvXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhhaXJEeWV7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgdGhpcy5keWVfYnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oYWlyLWR5ZVwiKTtcbiAgICAgICAgdGhpcy5oYWlyX29iaiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGFpci1zdHlsZVwiKTtcbiAgICAgICAgdGhpcy5keWVfYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyx0aGlzLmhhbmRsZUR5ZS5iaW5kKHRoaXMpKVxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmR5ZV9idG4pXG4gICAgICAgIFxuICAgIH1cblxuICAgIGhhbmRsZUR5ZShlKXtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBjb25zdCBjb2xvcnMgPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBjb2xvcnMuY2xhc3NMaXN0LmFkZCgnd2hlZWwnKTtcbiAgICAgICAgY29sb3JzLnNldEF0dHJpYnV0ZSgnaWQnLCdjb2xvcldoZWVsJyk7XG4gICAgICAgIHRoaXMuZHllX2J0bi5hcHBlbmRDaGlsZChjb2xvcnMpO1xuICAgICAgICBjb25zb2xlLmxvZyhjb2xvcnMpO1xuICAgIHZhciBjb2xvcldoZWVsID0gbmV3IGlyby5Db2xvclBpY2tlcihcIiNjb2xvcldoZWVsXCIsIHtcblxuICAgICAgICBsYXlvdXQ6IFtcbiAgICAgICAgeyBcbiAgICAgICAgY29tcG9uZW50OiBpcm8udWkuV2hlZWwsXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgIHdoZWVsTGlnaHRuZXNzOiB0cnVlLFxuICAgICAgICAgICAgd2hlZWxBbmdsZTogMCxcbiAgICAgICAgICAgIHdoZWVsRGlyZWN0aW9uOiBcImFudGljbG9ja3dpc2VcIlxuICAgICAgICB9IFxuICAgICAgICB9LFxuICAgICAgICAvLyB7XG4gICAgICAgIC8vIGNvbXBvbmVudDogaXJvLnVpLkJveCxcbiAgICAgICAgLy8gb3B0aW9uczoge1xuICAgICAgICAvLyAgICAgLy8gc2VlIGJlbG93XG4gICAgICAgIC8vIH1cbiAgICAgICAgLy8gfSxcbiAgICAgICAgLy8ge1xuICAgICAgICAvLyBjb21wb25lbnQ6IGlyby51aS5TbGlkZXIsXG4gICAgICAgIC8vIG9wdGlvbnM6IHtcbiAgICAgICAgLy8gICAgIHNsaWRlclR5cGU6ICdodWUnICxcbiAgICAgICAgLy8gICAgIHNsaWRlclNoYXBlOiAnY2lyY2xlJyxcbiAgICAgICAgLy8gICAgIGFjdGl2ZUluZGV4OiAyXG4gICAgICAgIC8vIH1cbiAgICAgICAgLy8gfVxuICAgICAgICBdXG4gICAgXG4gICAgfSk7XG5cbiAgICAgICAgfVxuXG5cblxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/tools/hairDye.js\n");

/***/ }),

/***/ "./src/scripts/tools/scissors.js":
/*!***************************************!*\
  !*** ./src/scripts/tools/scissors.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Scissors; }\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Scissors = /*#__PURE__*/function () {\n  function Scissors() {\n    _classCallCheck(this, Scissors);\n\n    this.scissors_btn = document.querySelector(\".scissors\");\n    this.hair_obj = document.querySelector(\".hair-style\");\n    this.scissors_btn.addEventListener('click', this.handleScissors.bind(this));\n  }\n\n  _createClass(Scissors, [{\n    key: \"handleScissors\",\n    value: function handleScissors(e) {\n      e.preventDefault();\n\n      switch (this.hair_obj.id) {\n        case 'initial':\n          this.hair_obj.src = \"/src/image/hairstyle/straight/straight-long-cut.png\";\n          this.hair_obj.id = \"straight-long-cut\";\n          break;\n\n        case 'long':\n          this.hair_obj.src = \"/src/image/hairstyle/long/long-cut.png\";\n          this.hair_obj.id = \"long-cut\";\n          break;\n\n        case 'long-cut':\n          this.hair_obj.src = \"/src/image/hairstyle/long/long-cut-end.png\";\n          this.hair_obj.id = \"long-cut-end\";\n          break;\n\n        case 'median':\n          this.hair_obj.src = \"/src/image/hairstyle/long/long-cut-end.png\";\n          this.hair_obj.id = \"long-cut-end\";\n          break;\n\n        case 'curling-long':\n          this.hair_obj.src = \"/src/image/hairstyle/curling/curling-long-cut.png\";\n          this.hair_obj.id = \"curling-long-cut\";\n          break;\n\n        case 'curling-long-cut':\n          this.hair_obj.src = \"/src/image/hairstyle/curling/curling-long-cut-end.png\";\n          this.hair_obj.id = \"curling-long-cut-end\";\n          break;\n\n        case 'curling-median':\n          this.hair_obj.src = \"/src/image/hairstyle/curling/curling-long-cut-end.png\";\n          this.hair_obj.id = \"curling-long-cut-end\";\n          break;\n\n        case 'straight-long':\n          this.hair_obj.src = \"/src/image/hairstyle/straight/straight-long-cut.png\";\n          this.hair_obj.id = \"straight-long-cut\";\n          break;\n\n        case 'straight-long-cut':\n          this.hair_obj.src = \"/src/image/hairstyle/straight/straight-long-cut-end.png\";\n          this.hair_obj.id = \"straight-long-cut-end\";\n          break;\n\n        case 'straight-median':\n          this.hair_obj.src = \"/src/image/hairstyle/straight/straight-long-cut-end.png\";\n          this.hair_obj.id = \"straight-long-cut-end\";\n          break;\n\n        case 'blow':\n          this.hair_obj.src = \"/src/image/hairstyle/straight/straight-long-cut-end.png\";\n          this.hair_obj.id = \"straight-long-cut-end\";\n          break;\n\n        default:\n          alert('can not cut');\n      }\n    }\n  }]);\n\n  return Scissors;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvc2NyaXB0cy90b29scy9zY2lzc29ycy5qcz80YjYwIl0sIm5hbWVzIjpbIlNjaXNzb3JzIiwic2Npc3NvcnNfYnRuIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaGFpcl9vYmoiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlU2Npc3NvcnMiLCJiaW5kIiwiZSIsInByZXZlbnREZWZhdWx0IiwiaWQiLCJzcmMiLCJhbGVydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQUFxQkEsUTtBQUNqQixzQkFBYTtBQUFBOztBQUNULFNBQUtDLFlBQUwsR0FBb0JDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixXQUF2QixDQUFwQjtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JGLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixhQUF2QixDQUFoQjtBQUNBLFNBQUtGLFlBQUwsQ0FBa0JJLGdCQUFsQixDQUFtQyxPQUFuQyxFQUEyQyxLQUFLQyxjQUFMLENBQW9CQyxJQUFwQixDQUF5QixJQUF6QixDQUEzQztBQUNIOzs7O1dBRUQsd0JBQWVDLENBQWYsRUFBaUI7QUFDYkEsT0FBQyxDQUFDQyxjQUFGOztBQUNBLGNBQU8sS0FBS0wsUUFBTCxDQUFjTSxFQUFyQjtBQUNJLGFBQUssU0FBTDtBQUNJLGVBQUtOLFFBQUwsQ0FBY08sR0FBZCxHQUFvQixxREFBcEI7QUFDQSxlQUFLUCxRQUFMLENBQWNNLEVBQWQsR0FBa0IsbUJBQWxCO0FBQ0E7O0FBQ0osYUFBSyxNQUFMO0FBQ0ksZUFBS04sUUFBTCxDQUFjTyxHQUFkLEdBQW9CLHdDQUFwQjtBQUNBLGVBQUtQLFFBQUwsQ0FBY00sRUFBZCxHQUFrQixVQUFsQjtBQUNBOztBQUNKLGFBQUssVUFBTDtBQUNJLGVBQUtOLFFBQUwsQ0FBY08sR0FBZCxHQUFvQiw0Q0FBcEI7QUFDQSxlQUFLUCxRQUFMLENBQWNNLEVBQWQsR0FBa0IsY0FBbEI7QUFDQTs7QUFDSixhQUFLLFFBQUw7QUFDSSxlQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBb0IsNENBQXBCO0FBQ0EsZUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLGNBQWxCO0FBQ0E7O0FBQ0osYUFBSyxjQUFMO0FBQ0ksZUFBS04sUUFBTCxDQUFjTyxHQUFkLEdBQW9CLG1EQUFwQjtBQUNBLGVBQUtQLFFBQUwsQ0FBY00sRUFBZCxHQUFrQixrQkFBbEI7QUFDQTs7QUFDSixhQUFLLGtCQUFMO0FBQ0ksZUFBS04sUUFBTCxDQUFjTyxHQUFkLEdBQW9CLHVEQUFwQjtBQUNBLGVBQUtQLFFBQUwsQ0FBY00sRUFBZCxHQUFrQixzQkFBbEI7QUFDQTs7QUFDSixhQUFLLGdCQUFMO0FBQ0ksZUFBS04sUUFBTCxDQUFjTyxHQUFkLEdBQW9CLHVEQUFwQjtBQUNBLGVBQUtQLFFBQUwsQ0FBY00sRUFBZCxHQUFrQixzQkFBbEI7QUFDQTs7QUFDSixhQUFLLGVBQUw7QUFDSSxlQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBb0IscURBQXBCO0FBQ0EsZUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLG1CQUFsQjtBQUNBOztBQUNKLGFBQUssbUJBQUw7QUFDSSxlQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBb0IseURBQXBCO0FBQ0EsZUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLHVCQUFsQjtBQUNBOztBQUNKLGFBQUssaUJBQUw7QUFDSSxlQUFLTixRQUFMLENBQWNPLEdBQWQsR0FBb0IseURBQXBCO0FBQ0EsZUFBS1AsUUFBTCxDQUFjTSxFQUFkLEdBQWtCLHVCQUFsQjtBQUNBOztBQUNBLGFBQUssTUFBTDtBQUNJLGVBQUtOLFFBQUwsQ0FBY08sR0FBZCxHQUFvQix5REFBcEI7QUFDQSxlQUFLUCxRQUFMLENBQWNNLEVBQWQsR0FBa0IsdUJBQWxCO0FBQ0E7O0FBQ1I7QUFDSUUsZUFBSyxDQUFDLGFBQUQsQ0FBTDtBQTlDUjtBQW1EQyIsImZpbGUiOiIuL3NyYy9zY3JpcHRzL3Rvb2xzL3NjaXNzb3JzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2Npc3NvcnN7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgdGhpcy5zY2lzc29yc19idG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNjaXNzb3JzXCIpO1xuICAgICAgICB0aGlzLmhhaXJfb2JqID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oYWlyLXN0eWxlXCIpO1xuICAgICAgICB0aGlzLnNjaXNzb3JzX2J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsdGhpcy5oYW5kbGVTY2lzc29ycy5iaW5kKHRoaXMpKTtcbiAgICB9XG5cbiAgICBoYW5kbGVTY2lzc29ycyhlKXtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBzd2l0Y2godGhpcy5oYWlyX29iai5pZCl7XG4gICAgICAgICAgICBjYXNlICdpbml0aWFsJzpcbiAgICAgICAgICAgICAgICB0aGlzLmhhaXJfb2JqLnNyYyA9IFwiL3NyYy9pbWFnZS9oYWlyc3R5bGUvc3RyYWlnaHQvc3RyYWlnaHQtbG9uZy1jdXQucG5nXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJzdHJhaWdodC1sb25nLWN1dFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnbG9uZyc6XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmMgPSBcIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2xvbmcvbG9uZy1jdXQucG5nXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJsb25nLWN1dFwiXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdsb25nLWN1dCc6XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmMgPSBcIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2xvbmcvbG9uZy1jdXQtZW5kLnBuZ1wiO1xuICAgICAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouaWQgPVwibG9uZy1jdXQtZW5kXCJcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ21lZGlhbic6XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmMgPSBcIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2xvbmcvbG9uZy1jdXQtZW5kLnBuZ1wiO1xuICAgICAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouaWQgPVwibG9uZy1jdXQtZW5kXCJcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2N1cmxpbmctbG9uZyc6XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmMgPSBcIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2N1cmxpbmcvY3VybGluZy1sb25nLWN1dC5wbmdcIjtcbiAgICAgICAgICAgICAgICB0aGlzLmhhaXJfb2JqLmlkID1cImN1cmxpbmctbG9uZy1jdXRcIlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnY3VybGluZy1sb25nLWN1dCc6XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmMgPSBcIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2N1cmxpbmcvY3VybGluZy1sb25nLWN1dC1lbmQucG5nXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJjdXJsaW5nLWxvbmctY3V0LWVuZFwiXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdjdXJsaW5nLW1lZGlhbic6XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmMgPSBcIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL2N1cmxpbmcvY3VybGluZy1sb25nLWN1dC1lbmQucG5nXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJjdXJsaW5nLWxvbmctY3V0LWVuZFwiXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdzdHJhaWdodC1sb25nJzpcbiAgICAgICAgICAgICAgICB0aGlzLmhhaXJfb2JqLnNyYyA9IFwiL3NyYy9pbWFnZS9oYWlyc3R5bGUvc3RyYWlnaHQvc3RyYWlnaHQtbG9uZy1jdXQucG5nXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJzdHJhaWdodC1sb25nLWN1dFwiXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdzdHJhaWdodC1sb25nLWN1dCc6XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5zcmMgPSBcIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL3N0cmFpZ2h0L3N0cmFpZ2h0LWxvbmctY3V0LWVuZC5wbmdcIjtcbiAgICAgICAgICAgICAgICB0aGlzLmhhaXJfb2JqLmlkID1cInN0cmFpZ2h0LWxvbmctY3V0LWVuZFwiXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdzdHJhaWdodC1tZWRpYW4nOlxuICAgICAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouc3JjID0gXCIvc3JjL2ltYWdlL2hhaXJzdHlsZS9zdHJhaWdodC9zdHJhaWdodC1sb25nLWN1dC1lbmQucG5nXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJzdHJhaWdodC1sb25nLWN1dC1lbmRcIlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2Jsb3cnOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLmhhaXJfb2JqLnNyYyA9IFwiL3NyYy9pbWFnZS9oYWlyc3R5bGUvc3RyYWlnaHQvc3RyYWlnaHQtbG9uZy1jdXQtZW5kLnBuZ1wiO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmhhaXJfb2JqLmlkID1cInN0cmFpZ2h0LWxvbmctY3V0LWVuZFwiXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBhbGVydCgnY2FuIG5vdCBjdXQnKTtcblxuICAgICAgICB9XG5cblxuICAgICAgICB9XG4gICAgXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/tools/scissors.js\n");

/***/ }),

/***/ "./src/scripts/tools/straightener.js":
/*!*******************************************!*\
  !*** ./src/scripts/tools/straightener.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Straightener; }\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Straightener = function Straightener() {\n  _classCallCheck(this, Straightener);\n\n  _defineProperty(this, \"handleStraigtener\", function (e) {\n    e.preventDefault();\n\n    if (this.hair_obj.id === 'initial' || this.hair_obj.id === 'long' || this.hair_obj.id === 'curling-long') {\n      this.hair_obj.src = \"/src/image/hairstyle/straight/straight-long.png\";\n      this.hair_obj.id = \"straight-long\";\n    } else if (this.hair_obj.id === 'curling-median' || this.hair_obj.id === 'median' || this.hair_obj.id === 'blow') {\n      this.hair_obj.src = \"/src/image/hairstyle/straight/straight-median.png\";\n      this.hair_obj.id = \"straight-median\";\n    } else if (this.hair_obj.id === 'curling-short' || this.hair_obj.id === 'short') {\n      this.hair_obj.src = \"/src/image/hairstyle/straight/straight-short.png\";\n      this.hair_obj.id = \"straight-short\";\n    } else if (this.hair_obj.id === 'long-cut' || this.hair_obj.id === 'long-cut-end' || this.hair_obj.id === 'curling-long-cut' || this.hair_obj.id === 'curling-long-cut-end' || this.hair_obj.id === 'straight-long-cut' || this.hair_obj.id === 'straight-long-cut-end') {\n      alert('Please comb your hair first');\n    } else {\n      alert('it is perfect');\n    }\n  });\n\n  this.straightener_btn = document.querySelector('.straightener');\n  this.hair_obj = document.querySelector(\".hair-style\");\n  this.straightener_btn.addEventListener('click', this.handleStraigtener.bind(this));\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvc2NyaXB0cy90b29scy9zdHJhaWdodGVuZXIuanM/MjRjNyJdLCJuYW1lcyI6WyJTdHJhaWdodGVuZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJoYWlyX29iaiIsImlkIiwic3JjIiwiYWxlcnQiLCJzdHJhaWdodGVuZXJfYnRuIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhbmRsZVN0cmFpZ3RlbmVyIiwiYmluZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7SUFBcUJBLFksR0FDakIsd0JBQWE7QUFBQTs7QUFBQSw2Q0FNSyxVQUFTQyxDQUFULEVBQVc7QUFDekJBLEtBQUMsQ0FBQ0MsY0FBRjs7QUFFQSxRQUFHLEtBQUtDLFFBQUwsQ0FBY0MsRUFBZCxLQUFxQixTQUFyQixJQUFrQyxLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBbUIsTUFBckQsSUFBOEQsS0FBS0QsUUFBTCxDQUFjQyxFQUFkLEtBQXFCLGNBQXRGLEVBQXFHO0FBQ2xHLFdBQUtELFFBQUwsQ0FBY0UsR0FBZCxHQUFrQixpREFBbEI7QUFDQSxXQUFLRixRQUFMLENBQWNDLEVBQWQsR0FBa0IsZUFBbEI7QUFDRixLQUhELE1BR00sSUFBRyxLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBcUIsZ0JBQXJCLElBQXlDLEtBQUtELFFBQUwsQ0FBY0MsRUFBZCxLQUFtQixRQUE1RCxJQUF3RSxLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBbUIsTUFBOUYsRUFBcUc7QUFDdkcsV0FBS0QsUUFBTCxDQUFjRSxHQUFkLEdBQWtCLG1EQUFsQjtBQUNELFdBQUtGLFFBQUwsQ0FBY0MsRUFBZCxHQUFrQixpQkFBbEI7QUFDRixLQUhLLE1BR0EsSUFBRyxLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBcUIsZUFBckIsSUFBd0MsS0FBS0QsUUFBTCxDQUFjQyxFQUFkLEtBQXFCLE9BQWhFLEVBQXdFO0FBQzFFLFdBQUtELFFBQUwsQ0FBY0UsR0FBZCxHQUFrQixrREFBbEI7QUFDQSxXQUFLRixRQUFMLENBQWNDLEVBQWQsR0FBa0IsZ0JBQWxCO0FBQ0gsS0FISyxNQUdBLElBQUksS0FBS0QsUUFBTCxDQUFjQyxFQUFkLEtBQXFCLFVBQXJCLElBQWlDLEtBQUtELFFBQUwsQ0FBY0MsRUFBZCxLQUFxQixjQUF0RCxJQUF1RSxLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBb0Isa0JBQTNGLElBQStHLEtBQUtELFFBQUwsQ0FBY0MsRUFBZCxLQUFvQixzQkFBbkksSUFBMkosS0FBS0QsUUFBTCxDQUFjQyxFQUFkLEtBQW9CLG1CQUEvSyxJQUFvTSxLQUFLRCxRQUFMLENBQWNDLEVBQWQsS0FBb0IsdUJBQTVOLEVBQW9QO0FBQ3RQRSxXQUFLLENBQUMsNkJBQUQsQ0FBTDtBQUNILEtBRkssTUFFRDtBQUNEQSxXQUFLLENBQUMsZUFBRCxDQUFMO0FBQ0g7QUFDSixHQXZCWTs7QUFDVCxPQUFLQyxnQkFBTCxHQUF3QkMsUUFBUSxDQUFDQyxhQUFULENBQXVCLGVBQXZCLENBQXhCO0FBQ0EsT0FBS04sUUFBTCxHQUFnQkssUUFBUSxDQUFDQyxhQUFULENBQXVCLGFBQXZCLENBQWhCO0FBQ0EsT0FBS0YsZ0JBQUwsQ0FBc0JHLGdCQUF0QixDQUF1QyxPQUF2QyxFQUErQyxLQUFLQyxpQkFBTCxDQUF1QkMsSUFBdkIsQ0FBNEIsSUFBNUIsQ0FBL0M7QUFDSCxDIiwiZmlsZSI6Ii4vc3JjL3NjcmlwdHMvdG9vbHMvc3RyYWlnaHRlbmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RyYWlnaHRlbmVye1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHRoaXMuc3RyYWlnaHRlbmVyX2J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zdHJhaWdodGVuZXInKVxuICAgICAgICB0aGlzLmhhaXJfb2JqID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oYWlyLXN0eWxlXCIpO1xuICAgICAgICB0aGlzLnN0cmFpZ2h0ZW5lcl9idG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLHRoaXMuaGFuZGxlU3RyYWlndGVuZXIuYmluZCh0aGlzKSlcbiAgICB9XG4gICAgXG4gICAgaGFuZGxlU3RyYWlndGVuZXI9ZnVuY3Rpb24oZSl7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgXG4gICAgICAgIGlmKHRoaXMuaGFpcl9vYmouaWQgPT09ICdpbml0aWFsJyB8fCB0aGlzLmhhaXJfb2JqLmlkPT09J2xvbmcnIHx8dGhpcy5oYWlyX29iai5pZCA9PT0gJ2N1cmxpbmctbG9uZycpe1xuICAgICAgICAgICB0aGlzLmhhaXJfb2JqLnNyYz1cIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL3N0cmFpZ2h0L3N0cmFpZ2h0LWxvbmcucG5nXCI7XG4gICAgICAgICAgIHRoaXMuaGFpcl9vYmouaWQgPVwic3RyYWlnaHQtbG9uZ1wiO1xuICAgICAgICB9ZWxzZSBpZih0aGlzLmhhaXJfb2JqLmlkID09PSAnY3VybGluZy1tZWRpYW4nIHx8IHRoaXMuaGFpcl9vYmouaWQ9PT0nbWVkaWFuJyB8fCB0aGlzLmhhaXJfb2JqLmlkPT09J2Jsb3cnKXtcbiAgICAgICAgICAgIHRoaXMuaGFpcl9vYmouc3JjPVwiL3NyYy9pbWFnZS9oYWlyc3R5bGUvc3RyYWlnaHQvc3RyYWlnaHQtbWVkaWFuLnBuZ1wiO1xuICAgICAgICAgICB0aGlzLmhhaXJfb2JqLmlkID1cInN0cmFpZ2h0LW1lZGlhblwiO1xuICAgICAgICB9ZWxzZSBpZih0aGlzLmhhaXJfb2JqLmlkID09PSAnY3VybGluZy1zaG9ydCcgfHwgdGhpcy5oYWlyX29iai5pZCA9PT0gJ3Nob3J0Jyl7XG4gICAgICAgICAgICB0aGlzLmhhaXJfb2JqLnNyYz1cIi9zcmMvaW1hZ2UvaGFpcnN0eWxlL3N0cmFpZ2h0L3N0cmFpZ2h0LXNob3J0LnBuZ1wiO1xuICAgICAgICAgICAgdGhpcy5oYWlyX29iai5pZCA9XCJzdHJhaWdodC1zaG9ydFwiO1xuICAgICAgICB9ZWxzZSBpZiAodGhpcy5oYWlyX29iai5pZCA9PT0gJ2xvbmctY3V0J3x8dGhpcy5oYWlyX29iai5pZCA9PT0gJ2xvbmctY3V0LWVuZCcgfHx0aGlzLmhhaXJfb2JqLmlkID09PSdjdXJsaW5nLWxvbmctY3V0J3x8dGhpcy5oYWlyX29iai5pZCA9PT0nY3VybGluZy1sb25nLWN1dC1lbmQnfHx0aGlzLmhhaXJfb2JqLmlkID09PSdzdHJhaWdodC1sb25nLWN1dCd8fHRoaXMuaGFpcl9vYmouaWQgPT09J3N0cmFpZ2h0LWxvbmctY3V0LWVuZCcpe1xuICAgICAgICAgICAgYWxlcnQoJ1BsZWFzZSBjb21iIHlvdXIgaGFpciBmaXJzdCcpXG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgYWxlcnQoJ2l0IGlzIHBlcmZlY3QnKTtcbiAgICAgICAgfVxuICAgIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/tools/straightener.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9IYWlyRHJlc3NpbmcvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSIsImZpbGUiOiIuL3NyYy9pbmRleC5zY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;